

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue May 28 16:02:52 2024

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F8722 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _LATDbits	set	3980
    82  0000                     _LATCbits	set	3979
    83  0000                     _LATBbits	set	3978
    84  0000                     _LATAbits	set	3977
    85  0000                     _T0CONbits	set	4053
    86  0000                     _T0CON	set	4053
    87  0000                     _ADRESL	set	4035
    88  0000                     _ADRESH	set	4036
    89  0000                     _ADCON2	set	4032
    90  0000                     _ADCON1	set	4033
    91  0000                     _ADCON0	set	4034
    92  0000                     _PIE1bits	set	3997
    93  0000                     _RCSTA1bits	set	4011
    94  0000                     _SPBRG1	set	4015
    95  0000                     _BAUDCON1bits	set	3966
    96  0000                     _LATH	set	3984
    97  0000                     _LATD	set	3980
    98  0000                     _LATC	set	3979
    99  0000                     _LATB	set	3978
   100  0000                     _LATA	set	3977
   101  0000                     _PORTH	set	3975
   102  0000                     _PORTD	set	3971
   103  0000                     _PORTC	set	3970
   104  0000                     _PORTB	set	3969
   105  0000                     _PORTA	set	3968
   106  0000                     _TRISH	set	3993
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISC	set	3988
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISA	set	3986
   111  0000                     _TMR0L	set	4054
   112  0000                     _TMR0H	set	4055
   113  0000                     _TXREG1	set	4013
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _PIR1bits	set	3998
   116  0000                     _RCREG1	set	4014
   117  0000                     _RCSTAbits	set	4011
   118  0000                     _INTCONbits	set	4082
   119                           
   120                           ; #config settings
   121                           
   122                           	psect	cinit
   123  000754                     __pcinit:
   124                           	callstack 0
   125  000754                     start_initialization:
   126                           	callstack 0
   127  000754                     __initialization:
   128                           	callstack 0
   129                           
   130                           ; Clear objects allocated to BANK2 (255 bytes)
   131  000754  EE02  F000         	lfsr	0,__pbssBANK2
   132  000758  EE10 F0FF          	lfsr	1,255
   133  00075C                     clear_0:
   134  00075C  6AEE               	clrf	postinc0,c
   135  00075E  50E5               	movf	postdec1,w,c
   136  000760  50E1               	movf	fsr1l,w,c
   137  000762  E1FC               	bnz	clear_0
   138  000764  50E2               	movf	fsr1h,w,c
   139  000766  E1FA               	bnz	clear_0
   140                           
   141                           ; Clear objects allocated to BANK1 (255 bytes)
   142  000768  EE01  F000         	lfsr	0,__pbssBANK1
   143  00076C  EE10 F0FF          	lfsr	1,255
   144  000770                     clear_1:
   145  000770  6AEE               	clrf	postinc0,c
   146  000772  50E5               	movf	postdec1,w,c
   147  000774  50E1               	movf	fsr1l,w,c
   148  000776  E1FC               	bnz	clear_1
   149  000778  50E2               	movf	fsr1h,w,c
   150  00077A  E1FA               	bnz	clear_1
   151                           
   152                           ; Clear objects allocated to BANK0 (128 bytes)
   153  00077C  EE00  F060         	lfsr	0,__pbssBANK0
   154  000780  0E80               	movlw	128
   155  000782                     clear_2:
   156  000782  6AEE               	clrf	postinc0,c
   157  000784  06E8               	decf	wreg,f,c
   158  000786  E1FD               	bnz	clear_2
   159                           
   160                           ; Clear objects allocated to COMRAM (27 bytes)
   161  000788  EE00  F001         	lfsr	0,__pbssCOMRAM
   162  00078C  0E1B               	movlw	27
   163  00078E                     clear_3:
   164  00078E  6AEE               	clrf	postinc0,c
   165  000790  06E8               	decf	wreg,f,c
   166  000792  E1FD               	bnz	clear_3
   167  000794                     end_of_initialization:
   168                           	callstack 0
   169  000794                     __end_of__initialization:
   170                           	callstack 0
   171  000794  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   172  000796  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   173  000798  0100               	movlb	0
   174  00079A  EFCF  F003         	goto	_main	;jump to C main() function
   175                           
   176                           	psect	bssCOMRAM
   177  000001                     __pbssCOMRAM:
   178                           	callstack 0
   179  000001                     _message_name:
   180                           	callstack 0
   181  000001                     	ds	3
   182  000004                     _tail:
   183                           	callstack 0
   184  000004                     	ds	2
   185  000006                     _head:
   186                           	callstack 0
   187  000006                     	ds	2
   188  000008                     _parsed_number:
   189                           	callstack 0
   190  000008                     	ds	2
   191  00000A                     _speed:
   192                           	callstack 0
   193  00000A                     	ds	2
   194  00000C                     _adc:
   195                           	callstack 0
   196  00000C                     	ds	2
   197  00000E                     _dist:
   198                           	callstack 0
   199  00000E                     	ds	2
   200  000010                     _output_st:
   201                           	callstack 0
   202  000010                     	ds	1
   203  000011                     _pkt_id:
   204                           	callstack 0
   205  000011                     	ds	1
   206  000012                     _pkt_valid:
   207                           	callstack 0
   208  000012                     	ds	1
   209  000013                     _pkt_bodysize:
   210                           	callstack 0
   211  000013                     	ds	1
   212  000014                     _pkt_state:
   213                           	callstack 0
   214  000014                     	ds	1
   215  000015                     _parsed_digit_count:
   216                           	callstack 0
   217  000015                     	ds	1
   218  000016                     _digit_count_to_be_parsed:
   219                           	callstack 0
   220  000016                     	ds	1
   221  000017                     _message_pos:
   222                           	callstack 0
   223  000017                     	ds	1
   224  000018                     _message_type:
   225                           	callstack 0
   226  000018                     	ds	1
   227  000019                     _parse_state:
   228                           	callstack 0
   229  000019                     	ds	1
   230  00001A                     _is_manual:
   231                           	callstack 0
   232  00001A                     	ds	1
   233  00001B                     _altitude_period:
   234                           	callstack 0
   235  00001B                     	ds	1
   236                           
   237                           	psect	bssBANK0
   238  000060                     __pbssBANK0:
   239                           	callstack 0
   240  000060                     _pkt_body:
   241                           	callstack 0
   242  000060                     	ds	128
   243                           
   244                           	psect	bssBANK1
   245  000100                     __pbssBANK1:
   246                           	callstack 0
   247  000100                     _inbuf:
   248                           	callstack 0
   249  000100                     	ds	255
   250                           
   251                           	psect	bssBANK2
   252  000200                     __pbssBANK2:
   253                           	callstack 0
   254  000200                     _outbuf:
   255                           	callstack 0
   256  000200                     	ds	255
   257                           
   258                           	psect	cstackCOMRAM
   259  00001C                     __pcstackCOMRAM:
   260                           	callstack 0
   261  00001C                     buf_push@buf:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x0
   265  00001C                     	ds	1
   266  00001D                     ??_buf_push:
   267                           
   268                           ; 1 bytes @ 0x1
   269  00001D                     	ds	1
   270  00001E                     buf_isempty@buf:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x2
   274  00001E                     	ds	1
   275  00001F                     ??_buf_pop:
   276  00001F                     buf_push@v:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x3
   280  00001F                     	ds	1
   281  000020                     
   282                           ; 1 bytes @ 0x4
   283  000020                     	ds	1
   284  000021                     buf_pop@v:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x5
   288  000021                     	ds	1
   289  000022                     buf_pop@buf:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x6
   293  000022                     	ds	1
   294  000023                     ??_highPriorityISR:
   295                           
   296                           ; 1 bytes @ 0x7
   297  000023                     	ds	4
   298  000027                     ??_lowPriorityISR:
   299                           
   300                           ; 1 bytes @ 0xB
   301  000027                     	ds	1
   302  000028                     ??_get_led:
   303  000028                     ??_adc_task:
   304  000028                     get_manual@activation:
   305                           	callstack 0
   306  000028                     to_hex@nibble:
   307                           	callstack 0
   308  000028                     to_nibble@nibble:
   309                           	callstack 0
   310  000028                     get_speed@spd:
   311                           	callstack 0
   312  000028                     get_altitude@period:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xC
   316  000028                     	ds	1
   317  000029                     send_button_press@nibble0:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xD
   321  000029                     	ds	1
   322  00002A                     get_led@led:
   323                           	callstack 0
   324  00002A                     send_button_press@nibble1:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xE
   328  00002A                     	ds	1
   329  00002B                     send_button_press@button:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xF
   333  00002B                     	ds	1
   334  00002C                     send_button_press@hex:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x10
   338  00002C                     	ds	1
   339  00002D                     get_go@distance:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x11
   343  00002D                     	ds	2
   344  00002F                     ??_parse:
   345                           
   346                           ; 1 bytes @ 0x13
   347  00002F                     	ds	2
   348  000031                     parse@is_end:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x15
   352  000031                     	ds	1
   353  000032                     _parse$973:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x16
   357  000032                     	ds	1
   358  000033                     parse@is_digit:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x17
   362  000033                     	ds	1
   363  000034                     parse@value:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x18
   367  000034                     	ds	1
   368  000035                     ??_main:
   369                           
   370                           ; 1 bytes @ 0x19
   371  000035                     	ds	2
   372                           
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 554 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;Total ram usage:        2 bytes
   397 ;; Hardware stack levels required when called:    9
   398 ;; This function calls:
   399 ;;		_adc_task
   400 ;;		_init_adc
   401 ;;		_init_interrupts
   402 ;;		_init_ports
   403 ;;		_init_serial
   404 ;;		_init_timer
   405 ;;		_parse
   406 ;;		_start_system
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text0
   413  00079E                     __ptext0:
   414                           	callstack 0
   415  00079E                     _main:
   416                           	callstack 22
   417  00079E  ECEE  F003         	call	_init_ports	;wreg free
   418  0007A2  EC7E  F004         	call	_init_serial	;wreg free
   419  0007A6  EC96  F004         	call	_init_interrupts	;wreg free
   420  0007AA  EC69  F004         	call	_init_adc	;wreg free
   421  0007AE  EC8F  F004         	call	_init_timer	;wreg free
   422  0007B2  ECAD  F004         	call	_start_system	;wreg free
   423  0007B6                     l1918:
   424  0007B6  EC15  F000         	call	_parse	;wreg free
   425  0007BA  EC3A  F004         	call	_adc_task	;wreg free
   426  0007BE  0EFE               	movlw	254
   427  0007C0  6E36               	movwf	(??_main+1)^0,c
   428  0007C2  0EA7               	movlw	167
   429  0007C4  6E35               	movwf	??_main^0,c
   430  0007C6  0E66               	movlw	102
   431  0007C8                     u1177:
   432  0007C8  2EE8               	decfsz	wreg,f,c
   433  0007CA  D7FE               	bra	u1177
   434  0007CC  2E35               	decfsz	??_main^0,f,c
   435  0007CE  D7FC               	bra	u1177
   436  0007D0  2E36               	decfsz	(??_main+1)^0,f,c
   437  0007D2  D7FA               	bra	u1177
   438  0007D4  EFDB  F003         	goto	l1918
   439  0007D8  EF13  F000         	goto	start
   440  0007DC                     __end_of_main:
   441                           	callstack 0
   442                           
   443 ;; *************** function _start_system *****************
   444 ;; Defined at:
   445 ;;		line 242 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		None
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    5
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text1
   474  00095A                     __ptext1:
   475                           	callstack 0
   476  00095A                     _start_system:
   477                           	callstack 25
   478  00095A                     
   479                           ;main.c: 243: 
   480  00095A  8ED5               	bsf	213,7,c	;volatile
   481                           
   482                           ;main.c: 244:     enable_interrupts();
   483  00095C  8EF2               	bsf	242,7,c	;volatile
   484  00095E  0012               	return		;funcret
   485  000960                     __end_of_start_system:
   486                           	callstack 0
   487                           
   488 ;; *************** function _parse *****************
   489 ;; Defined at:
   490 ;;		line 450 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  is_digit        1   23[COMRAM] _Bool 
   495 ;;  is_end          1   21[COMRAM] _Bool 
   496 ;;  value           1   24[COMRAM] unsigned char 
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;Total ram usage:        6 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; Hardware stack levels required when called:    8
   513 ;; This function calls:
   514 ;;		_buf_isempty
   515 ;;		_buf_pop
   516 ;;		_buf_push
   517 ;;		_disable_interrupts
   518 ;;		_enable_interrupts
   519 ;;		_get_altitude
   520 ;;		_get_end
   521 ;;		_get_go
   522 ;;		_get_led
   523 ;;		_get_manual
   524 ;;		_get_speed
   525 ;;		_send
   526 ;;		_to_nibble
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text2
   533  00002A                     __ptext2:
   534                           	callstack 0
   535  00002A                     _parse:
   536                           	callstack 22
   537  00002A                     l1668:
   538  00002A  ECB5  F004         	call	_disable_interrupts	;wreg free
   539  00002E  EF14  F002         	goto	l1804
   540  000032                     l1670:
   541  000032  0E00               	movlw	0
   542  000034  EC22  F002         	call	_buf_pop
   543  000038  6E34               	movwf	parse@value^0,c
   544  00003A  0E01               	movlw	1
   545  00003C  6E1C               	movwf	buf_push@buf^0,c
   546  00003E  5034               	movf	parse@value^0,w,c
   547  000040  EC7C  F002         	call	_buf_push
   548  000044  ECB7  F004         	call	_enable_interrupts	;wreg free
   549  000048  ECB3  F004         	call	_send	;wreg free
   550  00004C  EFFB  F001         	goto	l1800
   551  000050                     l1678:
   552  000050  0E24               	movlw	36
   553  000052  1834               	xorwf	parse@value^0,w,c
   554  000054  A4D8               	btfss	status,2,c
   555  000056  EF2F  F000         	goto	u781
   556  00005A  EF31  F000         	goto	u780
   557  00005E                     u781:
   558  00005E  EF15  F000         	goto	l1668
   559  000062                     u780:
   560  000062  0E01               	movlw	1
   561  000064  6E19               	movwf	_parse_state^0,c
   562  000066  EF15  F000         	goto	l1668
   563  00006A                     l1682:
   564  00006A  0E01               	movlw	low _message_name
   565  00006C  2417               	addwf	_message_pos^0,w,c
   566  00006E  6ED9               	movwf	fsr2l,c
   567  000070  6ADA               	clrf	fsr2h,c
   568  000072  0E00               	movlw	high _message_name
   569  000074  22DA               	addwfc	fsr2h,f,c
   570  000076  C034  FFDF         	movff	parse@value,indf2
   571  00007A  2A17               	incf	_message_pos^0,f,c
   572  00007C  0E03               	movlw	3
   573  00007E  1817               	xorwf	_message_pos^0,w,c
   574  000080  A4D8               	btfss	status,2,c
   575  000082  EF45  F000         	goto	u791
   576  000086  EF47  F000         	goto	u790
   577  00008A                     u791:
   578  00008A  EF15  F000         	goto	l1668
   579  00008E                     u790:
   580  00008E  0E47               	movlw	71
   581  000090  1801               	xorwf	_message_name^0,w,c
   582  000092  A4D8               	btfss	status,2,c
   583  000094  EF4E  F000         	goto	u801
   584  000098  EF50  F000         	goto	u800
   585  00009C                     u801:
   586  00009C  EF68  F000         	goto	l1696
   587  0000A0                     u800:
   588  0000A0  0E4F               	movlw	79
   589  0000A2  1802               	xorwf	(_message_name+1)^0,w,c
   590  0000A4  A4D8               	btfss	status,2,c
   591  0000A6  EF57  F000         	goto	u811
   592  0000AA  EF59  F000         	goto	u810
   593  0000AE                     u811:
   594  0000AE  EF68  F000         	goto	l1696
   595  0000B2                     u810:
   596  0000B2  0E4F               	movlw	79
   597  0000B4  1803               	xorwf	(_message_name+2)^0,w,c
   598  0000B6  A4D8               	btfss	status,2,c
   599  0000B8  EF60  F000         	goto	u821
   600  0000BC  EF62  F000         	goto	u820
   601  0000C0                     u821:
   602  0000C0  EF68  F000         	goto	l1696
   603  0000C4                     u820:
   604  0000C4  0E00               	movlw	0
   605  0000C6  6E18               	movwf	_message_type^0,c
   606  0000C8  0E04               	movlw	4
   607  0000CA  6E16               	movwf	_digit_count_to_be_parsed^0,c
   608  0000CC  EF11  F001         	goto	l1738
   609  0000D0                     l1696:
   610  0000D0  0E45               	movlw	69
   611  0000D2  1801               	xorwf	_message_name^0,w,c
   612  0000D4  A4D8               	btfss	status,2,c
   613  0000D6  EF6F  F000         	goto	u831
   614  0000DA  EF71  F000         	goto	u830
   615  0000DE                     u831:
   616  0000DE  EF89  F000         	goto	l1704
   617  0000E2                     u830:
   618  0000E2  0E4E               	movlw	78
   619  0000E4  1802               	xorwf	(_message_name+1)^0,w,c
   620  0000E6  A4D8               	btfss	status,2,c
   621  0000E8  EF78  F000         	goto	u841
   622  0000EC  EF7A  F000         	goto	u840
   623  0000F0                     u841:
   624  0000F0  EF89  F000         	goto	l1704
   625  0000F4                     u840:
   626  0000F4  0E44               	movlw	68
   627  0000F6  1803               	xorwf	(_message_name+2)^0,w,c
   628  0000F8  A4D8               	btfss	status,2,c
   629  0000FA  EF81  F000         	goto	u851
   630  0000FE  EF83  F000         	goto	u850
   631  000102                     u851:
   632  000102  EF89  F000         	goto	l1704
   633  000106                     u850:
   634  000106  0E01               	movlw	1
   635  000108  6E18               	movwf	_message_type^0,c
   636  00010A  0E00               	movlw	0
   637  00010C  6E16               	movwf	_digit_count_to_be_parsed^0,c
   638  00010E  EF11  F001         	goto	l1738
   639  000112                     l1704:
   640  000112  0E53               	movlw	83
   641  000114  1801               	xorwf	_message_name^0,w,c
   642  000116  A4D8               	btfss	status,2,c
   643  000118  EF90  F000         	goto	u861
   644  00011C  EF92  F000         	goto	u860
   645  000120                     u861:
   646  000120  EFAA  F000         	goto	l1712
   647  000124                     u860:
   648  000124  0E50               	movlw	80
   649  000126  1802               	xorwf	(_message_name+1)^0,w,c
   650  000128  A4D8               	btfss	status,2,c
   651  00012A  EF99  F000         	goto	u871
   652  00012E  EF9B  F000         	goto	u870
   653  000132                     u871:
   654  000132  EFAA  F000         	goto	l1712
   655  000136                     u870:
   656  000136  0E44               	movlw	68
   657  000138  1803               	xorwf	(_message_name+2)^0,w,c
   658  00013A  A4D8               	btfss	status,2,c
   659  00013C  EFA2  F000         	goto	u881
   660  000140  EFA4  F000         	goto	u880
   661  000144                     u881:
   662  000144  EFAA  F000         	goto	l1712
   663  000148                     u880:
   664  000148  0E02               	movlw	2
   665  00014A  6E18               	movwf	_message_type^0,c
   666  00014C  0E04               	movlw	4
   667  00014E  6E16               	movwf	_digit_count_to_be_parsed^0,c
   668  000150  EF11  F001         	goto	l1738
   669  000154                     l1712:
   670  000154  0E41               	movlw	65
   671  000156  1801               	xorwf	_message_name^0,w,c
   672  000158  A4D8               	btfss	status,2,c
   673  00015A  EFB1  F000         	goto	u891
   674  00015E  EFB3  F000         	goto	u890
   675  000162                     u891:
   676  000162  EFCB  F000         	goto	l1720
   677  000166                     u890:
   678  000166  0E4C               	movlw	76
   679  000168  1802               	xorwf	(_message_name+1)^0,w,c
   680  00016A  A4D8               	btfss	status,2,c
   681  00016C  EFBA  F000         	goto	u901
   682  000170  EFBC  F000         	goto	u900
   683  000174                     u901:
   684  000174  EFCB  F000         	goto	l1720
   685  000178                     u900:
   686  000178  0E54               	movlw	84
   687  00017A  1803               	xorwf	(_message_name+2)^0,w,c
   688  00017C  A4D8               	btfss	status,2,c
   689  00017E  EFC3  F000         	goto	u911
   690  000182  EFC5  F000         	goto	u910
   691  000186                     u911:
   692  000186  EFCB  F000         	goto	l1720
   693  00018A                     u910:
   694  00018A  0E03               	movlw	3
   695  00018C  6E18               	movwf	_message_type^0,c
   696  00018E  0E04               	movlw	4
   697  000190  6E16               	movwf	_digit_count_to_be_parsed^0,c
   698  000192  EF11  F001         	goto	l1738
   699  000196                     l1720:
   700  000196  0E4D               	movlw	77
   701  000198  1801               	xorwf	_message_name^0,w,c
   702  00019A  A4D8               	btfss	status,2,c
   703  00019C  EFD2  F000         	goto	u921
   704  0001A0  EFD4  F000         	goto	u920
   705  0001A4                     u921:
   706  0001A4  EFEC  F000         	goto	l1728
   707  0001A8                     u920:
   708  0001A8  0E41               	movlw	65
   709  0001AA  1802               	xorwf	(_message_name+1)^0,w,c
   710  0001AC  A4D8               	btfss	status,2,c
   711  0001AE  EFDB  F000         	goto	u931
   712  0001B2  EFDD  F000         	goto	u930
   713  0001B6                     u931:
   714  0001B6  EFEC  F000         	goto	l1728
   715  0001BA                     u930:
   716  0001BA  0E4E               	movlw	78
   717  0001BC  1803               	xorwf	(_message_name+2)^0,w,c
   718  0001BE  A4D8               	btfss	status,2,c
   719  0001C0  EFE4  F000         	goto	u941
   720  0001C4  EFE6  F000         	goto	u940
   721  0001C8                     u941:
   722  0001C8  EFEC  F000         	goto	l1728
   723  0001CC                     u940:
   724  0001CC  0E04               	movlw	4
   725  0001CE  6E18               	movwf	_message_type^0,c
   726  0001D0  0E02               	movlw	2
   727  0001D2  6E16               	movwf	_digit_count_to_be_parsed^0,c
   728  0001D4  EF11  F001         	goto	l1738
   729  0001D8                     l1728:
   730  0001D8  0E4C               	movlw	76
   731  0001DA  1801               	xorwf	_message_name^0,w,c
   732  0001DC  A4D8               	btfss	status,2,c
   733  0001DE  EFF3  F000         	goto	u951
   734  0001E2  EFF5  F000         	goto	u950
   735  0001E6                     u951:
   736  0001E6  EF0D  F001         	goto	l1736
   737  0001EA                     u950:
   738  0001EA  0E45               	movlw	69
   739  0001EC  1802               	xorwf	(_message_name+1)^0,w,c
   740  0001EE  A4D8               	btfss	status,2,c
   741  0001F0  EFFC  F000         	goto	u961
   742  0001F4  EFFE  F000         	goto	u960
   743  0001F8                     u961:
   744  0001F8  EF0D  F001         	goto	l1736
   745  0001FC                     u960:
   746  0001FC  0E44               	movlw	68
   747  0001FE  1803               	xorwf	(_message_name+2)^0,w,c
   748  000200  A4D8               	btfss	status,2,c
   749  000202  EF05  F001         	goto	u971
   750  000206  EF07  F001         	goto	u970
   751  00020A                     u971:
   752  00020A  EF0D  F001         	goto	l1736
   753  00020E                     u970:
   754  00020E  0E05               	movlw	5
   755  000210  6E18               	movwf	_message_type^0,c
   756  000212  0E02               	movlw	2
   757  000214  6E16               	movwf	_digit_count_to_be_parsed^0,c
   758  000216  EF11  F001         	goto	l1738
   759  00021A                     l1736:
   760  00021A  0E00               	movlw	0
   761  00021C  6E19               	movwf	_parse_state^0,c
   762  00021E  EF15  F000         	goto	l1668
   763  000222                     l1738:
   764  000222  0E02               	movlw	2
   765  000224  6E19               	movwf	_parse_state^0,c
   766  000226  0E00               	movlw	0
   767  000228  6E17               	movwf	_message_pos^0,c
   768  00022A  0E00               	movlw	0
   769  00022C  6E15               	movwf	_parsed_digit_count^0,c
   770  00022E  EF15  F000         	goto	l1668
   771  000232                     l1740:
   772  000232  0E01               	movlw	1
   773  000234  6E32               	movwf	_parse$973^0,c
   774  000236  0E2F               	movlw	47
   775  000238  6434               	cpfsgt	parse@value^0,c
   776  00023A  EF21  F001         	goto	u981
   777  00023E  EF23  F001         	goto	u980
   778  000242                     u981:
   779  000242  EF2B  F001         	goto	l1746
   780  000246                     u980:
   781  000246  0E39               	movlw	57
   782  000248  6434               	cpfsgt	parse@value^0,c
   783  00024A  EF29  F001         	goto	u991
   784  00024E  EF2B  F001         	goto	u990
   785  000252                     u991:
   786  000252  EF4D  F001         	goto	l285
   787  000256                     u990:
   788  000256                     l1746:
   789  000256  0E40               	movlw	64
   790  000258  6434               	cpfsgt	parse@value^0,c
   791  00025A  EF31  F001         	goto	u1001
   792  00025E  EF33  F001         	goto	u1000
   793  000262                     u1001:
   794  000262  EF3B  F001         	goto	l1750
   795  000266                     u1000:
   796  000266  0E46               	movlw	70
   797  000268  6434               	cpfsgt	parse@value^0,c
   798  00026A  EF39  F001         	goto	u1011
   799  00026E  EF3B  F001         	goto	u1010
   800  000272                     u1011:
   801  000272  EF4D  F001         	goto	l285
   802  000276                     u1010:
   803  000276                     l1750:
   804  000276  0E60               	movlw	96
   805  000278  6434               	cpfsgt	parse@value^0,c
   806  00027A  EF41  F001         	goto	u1021
   807  00027E  EF43  F001         	goto	u1020
   808  000282                     u1021:
   809  000282  EF4B  F001         	goto	l1754
   810  000286                     u1020:
   811  000286  0E66               	movlw	102
   812  000288  6434               	cpfsgt	parse@value^0,c
   813  00028A  EF49  F001         	goto	u1031
   814  00028E  EF4B  F001         	goto	u1030
   815  000292                     u1031:
   816  000292  EF4D  F001         	goto	l285
   817  000296                     u1030:
   818  000296                     l1754:
   819  000296  0E00               	movlw	0
   820  000298  6E32               	movwf	_parse$973^0,c
   821  00029A                     l285:
   822  00029A  5032               	movf	_parse$973^0,w,c
   823  00029C  A4D8               	btfss	status,2,c
   824  00029E  EF53  F001         	goto	u1041
   825  0002A2  EF56  F001         	goto	u1040
   826  0002A6                     u1041:
   827  0002A6  0E01               	movlw	1
   828  0002A8  EF57  F001         	goto	u1050
   829  0002AC                     u1040:
   830  0002AC  0E00               	movlw	0
   831  0002AE                     u1050:
   832  0002AE  6E33               	movwf	parse@is_digit^0,c
   833  0002B0  0E23               	movlw	35
   834  0002B2  1834               	xorwf	parse@value^0,w,c
   835  0002B4  B4D8               	btfsc	status,2,c
   836  0002B6  EF5F  F001         	goto	u1061
   837  0002BA  EF62  F001         	goto	u1060
   838  0002BE                     u1061:
   839  0002BE  0E01               	movlw	1
   840  0002C0  EF63  F001         	goto	u1070
   841  0002C4                     u1060:
   842  0002C4  0E00               	movlw	0
   843  0002C6                     u1070:
   844  0002C6  6E31               	movwf	parse@is_end^0,c
   845  0002C8  5033               	movf	parse@is_digit^0,w,c
   846  0002CA  A4D8               	btfss	status,2,c
   847  0002CC  EF6A  F001         	goto	u1081
   848  0002D0  EF6C  F001         	goto	u1080
   849  0002D4                     u1081:
   850  0002D4  EF76  F001         	goto	l1764
   851  0002D8                     u1080:
   852  0002D8  5031               	movf	parse@is_end^0,w,c
   853  0002DA  A4D8               	btfss	status,2,c
   854  0002DC  EF72  F001         	goto	u1091
   855  0002E0  EF74  F001         	goto	u1090
   856  0002E4                     u1091:
   857  0002E4  EF76  F001         	goto	l1764
   858  0002E8                     u1090:
   859  0002E8  EF0D  F001         	goto	l1736
   860  0002EC                     l1764:
   861  0002EC  5033               	movf	parse@is_digit^0,w,c
   862  0002EE  B4D8               	btfsc	status,2,c
   863  0002F0  EF7C  F001         	goto	u1101
   864  0002F4  EF7E  F001         	goto	u1100
   865  0002F8                     u1101:
   866  0002F8  EF9B  F001         	goto	l1776
   867  0002FC                     u1100:
   868  0002FC  5016               	movf	_digit_count_to_be_parsed^0,w,c
   869  0002FE  1815               	xorwf	_parsed_digit_count^0,w,c
   870  000300  A4D8               	btfss	status,2,c
   871  000302  EF85  F001         	goto	u1111
   872  000306  EF87  F001         	goto	u1110
   873  00030A                     u1111:
   874  00030A  EF89  F001         	goto	l1770
   875  00030E                     u1110:
   876  00030E  EF0D  F001         	goto	l1736
   877  000312                     l1770:
   878  000312  3A08               	swapf	_parsed_number^0,f,c
   879  000314  3A09               	swapf	(_parsed_number+1)^0,f,c
   880  000316  0EF0               	movlw	240
   881  000318  1609               	andwf	(_parsed_number+1)^0,f,c
   882  00031A  5008               	movf	_parsed_number^0,w,c
   883  00031C  0B0F               	andlw	15
   884  00031E  1209               	iorwf	(_parsed_number+1)^0,f,c
   885  000320  0EF0               	movlw	240
   886  000322  1608               	andwf	_parsed_number^0,f,c
   887  000324  5034               	movf	parse@value^0,w,c
   888  000326  EC08  F003         	call	_to_nibble
   889  00032A  6E2F               	movwf	??_parse^0,c
   890  00032C  502F               	movf	??_parse^0,w,c
   891  00032E  1208               	iorwf	_parsed_number^0,f,c
   892  000330  2A15               	incf	_parsed_digit_count^0,f,c
   893  000332  EF15  F000         	goto	l1668
   894  000336                     l1776:
   895  000336  5016               	movf	_digit_count_to_be_parsed^0,w,c
   896  000338  1815               	xorwf	_parsed_digit_count^0,w,c
   897  00033A  A4D8               	btfss	status,2,c
   898  00033C  EFA2  F001         	goto	u1121
   899  000340  EFA4  F001         	goto	u1120
   900  000344                     u1121:
   901  000344  EFF1  F001         	goto	l1796
   902  000348                     u1120:
   903  000348  EFCC  F001         	goto	l1794
   904  00034C                     l1780:
   905  00034C  C008  F02D         	movff	_parsed_number,get_go@distance
   906  000350  C009  F02E         	movff	_parsed_number+1,get_go@distance+1
   907  000354  EC87  F004         	call	_get_go	;wreg free
   908  000358  EFF1  F001         	goto	l1796
   909  00035C                     l1782:
   910  00035C  ECA8  F004         	call	_get_end	;wreg free
   911  000360  EFF1  F001         	goto	l1796
   912  000364                     l1784:
   913  000364  C008  F028         	movff	_parsed_number,get_speed@spd
   914  000368  C009  F029         	movff	_parsed_number+1,get_speed@spd+1
   915  00036C  ECA3  F004         	call	_get_speed	;wreg free
   916  000370  EFF1  F001         	goto	l1796
   917  000374                     l1786:
   918  000374  C008  F028         	movff	_parsed_number,get_altitude@period
   919  000378  C009  F029         	movff	_parsed_number+1,get_altitude@period+1
   920  00037C  ECB0  F004         	call	_get_altitude	;wreg free
   921  000380  EFF1  F001         	goto	l1796
   922  000384                     l1788:
   923  000384  5008               	movf	_parsed_number^0,w,c
   924  000386  EC5C  F004         	call	_get_manual
   925  00038A  EFF1  F001         	goto	l1796
   926  00038E                     l1790:
   927  00038E  5008               	movf	_parsed_number^0,w,c
   928  000390  EC45  F003         	call	_get_led
   929  000394  EFF1  F001         	goto	l1796
   930  000398                     l1794:
   931  000398  5018               	movf	_message_type^0,w,c
   932  00039A  6E2F               	movwf	??_parse^0,c
   933  00039C  6A30               	clrf	(??_parse+1)^0,c
   934                           
   935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   936                           ; Switch size 1, requested type "simple"
   937                           ; Number of cases is 1, Range of values is 0 to 0
   938                           ; switch strategies available:
   939                           ; Name         Instructions Cycles
   940                           ; simple_byte            4     3 (average)
   941                           ;	Chosen strategy is simple_byte
   942  00039E  5030               	movf	(??_parse+1)^0,w,c
   943  0003A0  0A00               	xorlw	0	; case 0
   944  0003A2  B4D8               	btfsc	status,2,c
   945  0003A4  EFD6  F001         	goto	l1936
   946  0003A8  EFF1  F001         	goto	l1796
   947  0003AC                     l1936:
   948                           
   949                           ; Switch size 1, requested type "simple"
   950                           ; Number of cases is 6, Range of values is 0 to 5
   951                           ; switch strategies available:
   952                           ; Name         Instructions Cycles
   953                           ; simple_byte           19    10 (average)
   954                           ;	Chosen strategy is simple_byte
   955  0003AC  502F               	movf	??_parse^0,w,c
   956  0003AE  0A00               	xorlw	0	; case 0
   957  0003B0  B4D8               	btfsc	status,2,c
   958  0003B2  EFA6  F001         	goto	l1780
   959  0003B6  0A01               	xorlw	1	; case 1
   960  0003B8  B4D8               	btfsc	status,2,c
   961  0003BA  EFAE  F001         	goto	l1782
   962  0003BE  0A03               	xorlw	3	; case 2
   963  0003C0  B4D8               	btfsc	status,2,c
   964  0003C2  EFB2  F001         	goto	l1784
   965  0003C6  0A01               	xorlw	1	; case 3
   966  0003C8  B4D8               	btfsc	status,2,c
   967  0003CA  EFBA  F001         	goto	l1786
   968  0003CE  0A07               	xorlw	7	; case 4
   969  0003D0  B4D8               	btfsc	status,2,c
   970  0003D2  EFC2  F001         	goto	l1788
   971  0003D6  0A01               	xorlw	1	; case 5
   972  0003D8  B4D8               	btfsc	status,2,c
   973  0003DA  EFC7  F001         	goto	l1790
   974  0003DE  EFF1  F001         	goto	l1796
   975  0003E2                     l1796:
   976  0003E2  0E00               	movlw	0
   977  0003E4  6E15               	movwf	_parsed_digit_count^0,c
   978  0003E6  0E00               	movlw	0
   979  0003E8  6E19               	movwf	_parse_state^0,c
   980  0003EA  0E00               	movlw	0
   981  0003EC  6E09               	movwf	(_parsed_number+1)^0,c
   982  0003EE  0E00               	movlw	0
   983  0003F0  6E08               	movwf	_parsed_number^0,c
   984  0003F2  EF15  F000         	goto	l1668
   985  0003F6                     l1800:
   986  0003F6  5019               	movf	_parse_state^0,w,c
   987  0003F8  6E2F               	movwf	??_parse^0,c
   988  0003FA  6A30               	clrf	(??_parse+1)^0,c
   989                           
   990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 1, Range of values is 0 to 0
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte            4     3 (average)
   996                           ;	Chosen strategy is simple_byte
   997  0003FC  5030               	movf	(??_parse+1)^0,w,c
   998  0003FE  0A00               	xorlw	0	; case 0
   999  000400  B4D8               	btfsc	status,2,c
  1000  000402  EF05  F002         	goto	l1938
  1001  000406  EF15  F000         	goto	l1668
  1002  00040A                     l1938:
  1003                           
  1004                           ; Switch size 1, requested type "simple"
  1005                           ; Number of cases is 3, Range of values is 0 to 2
  1006                           ; switch strategies available:
  1007                           ; Name         Instructions Cycles
  1008                           ; simple_byte           10     6 (average)
  1009                           ;	Chosen strategy is simple_byte
  1010  00040A  502F               	movf	??_parse^0,w,c
  1011  00040C  0A00               	xorlw	0	; case 0
  1012  00040E  B4D8               	btfsc	status,2,c
  1013  000410  EF28  F000         	goto	l1678
  1014  000414  0A01               	xorlw	1	; case 1
  1015  000416  B4D8               	btfsc	status,2,c
  1016  000418  EF35  F000         	goto	l1682
  1017  00041C  0A03               	xorlw	3	; case 2
  1018  00041E  B4D8               	btfsc	status,2,c
  1019  000420  EF19  F001         	goto	l1740
  1020  000424  EF15  F000         	goto	l1668
  1021  000428                     l1804:
  1022  000428  0E00               	movlw	0
  1023  00042A  EC0D  F004         	call	_buf_isempty
  1024  00042E  0900               	iorlw	0
  1025  000430  B4D8               	btfsc	status,2,c
  1026  000432  EF1D  F002         	goto	u1131
  1027  000436  EF1F  F002         	goto	u1130
  1028  00043A                     u1131:
  1029  00043A  EF19  F000         	goto	l1670
  1030  00043E                     u1130:
  1031  00043E  ECB7  F004         	call	_enable_interrupts	;wreg free
  1032  000442  0012               	return		;funcret
  1033  000444                     __end_of_parse:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _to_nibble *****************
  1037 ;; Defined at:
  1038 ;;		line 327 in file "main.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  nibble          1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  nibble          1   12[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      unsigned char 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    5
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_parse
  1063 ;;		_from_hex
  1064 ;;		_from_hex16
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text3
  1069  000610                     __ptext3:
  1070                           	callstack 0
  1071  000610                     _to_nibble:
  1072                           	callstack 24
  1073                           
  1074                           ;incstack = 0
  1075                           ;to_nibble@nibble stored from wreg
  1076  000610  6E28               	movwf	to_nibble@nibble^0,c
  1077  000612                     
  1078                           ;main.c: 328:                 }
  1079  000612  0E2F               	movlw	47
  1080  000614  6428               	cpfsgt	to_nibble@nibble^0,c
  1081  000616  EF0F  F003         	goto	u711
  1082  00061A  EF11  F003         	goto	u710
  1083  00061E                     u711:
  1084  00061E  EF1D  F003         	goto	l1628
  1085  000622                     u710:
  1086  000622  0E3A               	movlw	58
  1087  000624  6028               	cpfslt	to_nibble@nibble^0,c
  1088  000626  EF17  F003         	goto	u721
  1089  00062A  EF19  F003         	goto	u720
  1090  00062E                     u721:
  1091  00062E  EF1D  F003         	goto	l1628
  1092  000632                     u720:
  1093  000632                     
  1094                           ;main.c: 329:                 break;
  1095  000632  5028               	movf	to_nibble@nibble^0,w,c
  1096  000634  0FD0               	addlw	208
  1097  000636  EF44  F003         	goto	l229
  1098  00063A                     l1628:
  1099  00063A  0E40               	movlw	64
  1100  00063C  6428               	cpfsgt	to_nibble@nibble^0,c
  1101  00063E  EF23  F003         	goto	u731
  1102  000642  EF25  F003         	goto	u730
  1103  000646                     u731:
  1104  000646  EF31  F003         	goto	l1638
  1105  00064A                     u730:
  1106  00064A  0E47               	movlw	71
  1107  00064C  6028               	cpfslt	to_nibble@nibble^0,c
  1108  00064E  EF2B  F003         	goto	u741
  1109  000652  EF2D  F003         	goto	u740
  1110  000656                     u741:
  1111  000656  EF31  F003         	goto	l1638
  1112  00065A                     u740:
  1113  00065A                     l1632:
  1114                           
  1115                           ;main.c: 331:                 message_name[message_pos] = value;
  1116  00065A  5028               	movf	to_nibble@nibble^0,w,c
  1117  00065C  0FC9               	addlw	201
  1118  00065E  EF44  F003         	goto	l229
  1119  000662                     l1638:
  1120  000662  0E40               	movlw	64
  1121  000664  6428               	cpfsgt	to_nibble@nibble^0,c
  1122  000666  EF37  F003         	goto	u751
  1123  00066A  EF39  F003         	goto	u750
  1124  00066E                     u751:
  1125  00066E  EF43  F003         	goto	l1646
  1126  000672                     u750:
  1127  000672  0E47               	movlw	71
  1128  000674  6028               	cpfslt	to_nibble@nibble^0,c
  1129  000676  EF3F  F003         	goto	u761
  1130  00067A  EF41  F003         	goto	u760
  1131  00067E                     u761:
  1132  00067E  EF43  F003         	goto	l1646
  1133  000682                     u760:
  1134  000682  EF2D  F003         	goto	l1632
  1135  000686                     l1646:
  1136                           
  1137                           ;main.c: 335:                         message_type = MT_GO;
  1138  000686  0EFF               	movlw	255
  1139  000688                     l229:
  1140  000688  0012               	return		;funcret
  1141  00068A                     __end_of_to_nibble:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _get_speed *****************
  1145 ;; Defined at:
  1146 ;;		line 283 in file "main.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  spd             2   12[COMRAM] unsigned short 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		None
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;Total ram usage:        2 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    5
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_parse
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text4
  1175  000946                     __ptext4:
  1176                           	callstack 0
  1177  000946                     _get_speed:
  1178                           	callstack 24
  1179  000946                     
  1180                           ;main.c: 284:     buf_push(hex, OUTBUF);
  1181  000946  C028  F00A         	movff	get_speed@spd,_speed
  1182  00094A  C029  F00B         	movff	get_speed@spd+1,_speed+1
  1183  00094E  0012               	return		;funcret
  1184  000950                     __end_of_get_speed:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _get_manual *****************
  1188 ;; Defined at:
  1189 ;;		line 291 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  activation      1    wreg     unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  activation      1   12[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;Total ram usage:        1 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    5
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_parse
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text5
  1218  0008B8                     __ptext5:
  1219                           	callstack 0
  1220  0008B8                     _get_manual:
  1221                           	callstack 24
  1222                           
  1223                           ;incstack = 0
  1224                           ;get_manual@activation stored from wreg
  1225  0008B8  6E28               	movwf	get_manual@activation^0,c
  1226  0008BA                     
  1227                           ;main.c: 292: 
  1228  0008BA  5028               	movf	get_manual@activation^0,w,c
  1229  0008BC  A4D8               	btfss	status,2,c
  1230  0008BE  EF63  F004         	goto	u691
  1231  0008C2  EF66  F004         	goto	u690
  1232  0008C6                     u691:
  1233  0008C6  0E01               	movlw	1
  1234  0008C8  EF67  F004         	goto	u700
  1235  0008CC                     u690:
  1236  0008CC  0E00               	movlw	0
  1237  0008CE                     u700:
  1238  0008CE  6E1A               	movwf	_is_manual^0,c
  1239  0008D0  0012               	return		;funcret
  1240  0008D2                     __end_of_get_manual:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _get_led *****************
  1244 ;; Defined at:
  1245 ;;		line 295 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  led             1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  led             1   14[COMRAM] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;Total ram usage:        3 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    5
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_parse
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text6
  1274  00068A                     __ptext6:
  1275                           	callstack 0
  1276  00068A                     _get_led:
  1277                           	callstack 24
  1278                           
  1279                           ;incstack = 0
  1280                           ;get_led@led stored from wreg
  1281  00068A  6E2A               	movwf	get_led@led^0,c
  1282  00068C                     
  1283                           ;main.c: 296:     uint8_t nibble1 = button & 0xF;
  1284  00068C  EF5A  F003         	goto	l1612
  1285  000690                     l214:
  1286                           
  1287                           ;main.c: 298:     disable_interrupts();
  1288  000690  9089               	bcf	137,0,c	;volatile
  1289                           
  1290                           ;main.c: 299:     buf_push('$', OUTBUF);
  1291  000692  908A               	bcf	138,0,c	;volatile
  1292                           
  1293                           ;main.c: 300:     buf_push('P', OUTBUF);
  1294  000694  908B               	bcf	139,0,c	;volatile
  1295                           
  1296                           ;main.c: 301:     buf_push('R', OUTBUF);
  1297  000696  908C               	bcf	140,0,c	;volatile
  1298                           
  1299                           ;main.c: 302:     buf_push('S', OUTBUF);
  1300  000698  EF7B  F003         	goto	l220
  1301  00069C                     l216:
  1302                           
  1303                           ;main.c: 304:     char hex;
  1304  00069C  808C               	bsf	140,0,c	;volatile
  1305                           
  1306                           ;main.c: 305:     hex = to_hex(nibble1);
  1307  00069E  EF7B  F003         	goto	l220
  1308  0006A2                     l217:
  1309                           
  1310                           ;main.c: 307:     hex = to_hex(nibble0);
  1311  0006A2  808B               	bsf	139,0,c	;volatile
  1312                           
  1313                           ;main.c: 308:     buf_push(hex, OUTBUF);
  1314  0006A4  EF7B  F003         	goto	l220
  1315  0006A8                     l218:
  1316                           
  1317                           ;main.c: 310:     buf_push('#', OUTBUF);
  1318  0006A8  808A               	bsf	138,0,c	;volatile
  1319                           
  1320                           ;main.c: 311:     buf_push('#', OUTBUF);
  1321  0006AA  EF7B  F003         	goto	l220
  1322  0006AE                     l219:
  1323                           
  1324                           ;main.c: 313:     send();
  1325  0006AE  8089               	bsf	137,0,c	;volatile
  1326                           
  1327                           ;main.c: 314: }
  1328  0006B0  EF7B  F003         	goto	l220
  1329  0006B4                     l1612:
  1330  0006B4  502A               	movf	get_led@led^0,w,c
  1331  0006B6  6E28               	movwf	??_get_led^0,c
  1332  0006B8  6A29               	clrf	(??_get_led+1)^0,c
  1333                           
  1334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1335                           ; Switch size 1, requested type "simple"
  1336                           ; Number of cases is 1, Range of values is 0 to 0
  1337                           ; switch strategies available:
  1338                           ; Name         Instructions Cycles
  1339                           ; simple_byte            4     3 (average)
  1340                           ;	Chosen strategy is simple_byte
  1341  0006BA  5029               	movf	(??_get_led+1)^0,w,c
  1342  0006BC  0A00               	xorlw	0	; case 0
  1343  0006BE  B4D8               	btfsc	status,2,c
  1344  0006C0  EF64  F003         	goto	l1940
  1345  0006C4  EF7B  F003         	goto	l220
  1346  0006C8                     l1940:
  1347                           
  1348                           ; Switch size 1, requested type "simple"
  1349                           ; Number of cases is 5, Range of values is 0 to 4
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte           16     9 (average)
  1353                           ;	Chosen strategy is simple_byte
  1354  0006C8  5028               	movf	??_get_led^0,w,c
  1355  0006CA  0A00               	xorlw	0	; case 0
  1356  0006CC  B4D8               	btfsc	status,2,c
  1357  0006CE  EF48  F003         	goto	l214
  1358  0006D2  0A01               	xorlw	1	; case 1
  1359  0006D4  B4D8               	btfsc	status,2,c
  1360  0006D6  EF4E  F003         	goto	l216
  1361  0006DA  0A03               	xorlw	3	; case 2
  1362  0006DC  B4D8               	btfsc	status,2,c
  1363  0006DE  EF51  F003         	goto	l217
  1364  0006E2  0A01               	xorlw	1	; case 3
  1365  0006E4  B4D8               	btfsc	status,2,c
  1366  0006E6  EF54  F003         	goto	l218
  1367  0006EA  0A07               	xorlw	7	; case 4
  1368  0006EC  B4D8               	btfsc	status,2,c
  1369  0006EE  EF57  F003         	goto	l219
  1370  0006F2  EF7B  F003         	goto	l220
  1371  0006F6                     l220:
  1372  0006F6  0012               	return		;funcret
  1373  0006F8                     __end_of_get_led:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _get_go *****************
  1377 ;; Defined at:
  1378 ;;		line 274 in file "main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  distance        2   17[COMRAM] unsigned short 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:        2 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    7
  1399 ;; This function calls:
  1400 ;;		_send_button_press
  1401 ;; This function is called by:
  1402 ;;		_parse
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text7
  1407  00090E                     __ptext7:
  1408                           	callstack 0
  1409  00090E                     _get_go:
  1410                           	callstack 22
  1411  00090E                     
  1412                           ;main.c: 275: 
  1413  00090E  C02D  F00E         	movff	get_go@distance,_dist
  1414  000912  C02E  F00F         	movff	get_go@distance+1,_dist+1
  1415  000916                     
  1416                           ;main.c: 276:     char hex;
  1417  000916  0E15               	movlw	21
  1418  000918  ECC7  F002         	call	_send_button_press
  1419  00091C  0012               	return		;funcret
  1420  00091E                     __end_of_get_go:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _send_button_press *****************
  1424 ;; Defined at:
  1425 ;;		line 427 in file "main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  button          1    wreg     unsigned char 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  button          1   15[COMRAM] unsigned char 
  1430 ;;  hex             1   16[COMRAM] unsigned char 
  1431 ;;  nibble1         1   14[COMRAM] unsigned char 
  1432 ;;  nibble0         1   13[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;Total ram usage:        4 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    6
  1449 ;; This function calls:
  1450 ;;		_buf_push
  1451 ;;		_disable_interrupts
  1452 ;;		_enable_interrupts
  1453 ;;		_send
  1454 ;;		_to_hex
  1455 ;; This function is called by:
  1456 ;;		_get_go
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text8
  1461  00058E                     __ptext8:
  1462                           	callstack 0
  1463  00058E                     _send_button_press:
  1464                           	callstack 22
  1465                           
  1466                           ;incstack = 0
  1467                           ;send_button_press@button stored from wreg
  1468  00058E  6E2B               	movwf	send_button_press@button^0,c
  1469  000590                     
  1470                           ;main.c: 428:     while (1) {
  1471  000590  502B               	movf	send_button_press@button^0,w,c
  1472  000592  0B0F               	andlw	15
  1473  000594  6E29               	movwf	send_button_press@nibble0^0,c
  1474                           
  1475                           ;main.c: 429:         parse();
  1476  000596  3A2B               	swapf	send_button_press@button^0,f,c
  1477  000598  0E0F               	movlw	15
  1478  00059A  162B               	andwf	send_button_press@button^0,f,c
  1479                           
  1480                           ;main.c: 430:         adc_task();
  1481  00059C  502B               	movf	send_button_press@button^0,w,c
  1482  00059E  0B0F               	andlw	15
  1483  0005A0  6E2A               	movwf	send_button_press@nibble1^0,c
  1484  0005A2                     
  1485                           ;main.c: 432:     }
  1486  0005A2  ECB5  F004         	call	_disable_interrupts	;wreg free
  1487  0005A6                     
  1488                           ;main.c: 433:     return;
  1489  0005A6  0E01               	movlw	1
  1490  0005A8  6E1C               	movwf	buf_push@buf^0,c
  1491  0005AA  0E24               	movlw	36
  1492  0005AC  EC7C  F002         	call	_buf_push
  1493  0005B0                     
  1494                           ;main.c: 434: }
  1495  0005B0  0E01               	movlw	1
  1496  0005B2  6E1C               	movwf	buf_push@buf^0,c
  1497  0005B4  0E50               	movlw	80
  1498  0005B6  EC7C  F002         	call	_buf_push
  1499  0005BA  0E01               	movlw	1
  1500  0005BC  6E1C               	movwf	buf_push@buf^0,c
  1501  0005BE  0E52               	movlw	82
  1502  0005C0  EC7C  F002         	call	_buf_push
  1503  0005C4  0E01               	movlw	1
  1504  0005C6  6E1C               	movwf	buf_push@buf^0,c
  1505  0005C8  0E53               	movlw	83
  1506  0005CA  EC7C  F002         	call	_buf_push
  1507  0005CE  502A               	movf	send_button_press@nibble1^0,w,c
  1508  0005D0  EC4C  F004         	call	_to_hex
  1509  0005D4  6E2C               	movwf	send_button_press@hex^0,c
  1510  0005D6  0E01               	movlw	1
  1511  0005D8  6E1C               	movwf	buf_push@buf^0,c
  1512  0005DA  502C               	movf	send_button_press@hex^0,w,c
  1513  0005DC  EC7C  F002         	call	_buf_push
  1514  0005E0  5029               	movf	send_button_press@nibble0^0,w,c
  1515  0005E2  EC4C  F004         	call	_to_hex
  1516  0005E6  6E2C               	movwf	send_button_press@hex^0,c
  1517  0005E8  0E01               	movlw	1
  1518  0005EA  6E1C               	movwf	buf_push@buf^0,c
  1519  0005EC  502C               	movf	send_button_press@hex^0,w,c
  1520  0005EE  EC7C  F002         	call	_buf_push
  1521  0005F2  0E01               	movlw	1
  1522  0005F4  6E1C               	movwf	buf_push@buf^0,c
  1523  0005F6  0E23               	movlw	35
  1524  0005F8  EC7C  F002         	call	_buf_push
  1525  0005FC  0E01               	movlw	1
  1526  0005FE  6E1C               	movwf	buf_push@buf^0,c
  1527  000600  0E23               	movlw	35
  1528  000602  EC7C  F002         	call	_buf_push
  1529  000606  ECB7  F004         	call	_enable_interrupts	;wreg free
  1530  00060A  ECB3  F004         	call	_send	;wreg free
  1531  00060E  0012               	return		;funcret
  1532  000610                     __end_of_send_button_press:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _to_hex *****************
  1536 ;; Defined at:
  1537 ;;		line 318 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  nibble          1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  nibble          1   12[COMRAM] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      unsigned char 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    5
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_send_button_press
  1562 ;;		_send_distance
  1563 ;;		_send_altitude
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text9
  1568  000898                     __ptext9:
  1569                           	callstack 0
  1570  000898                     _to_hex:
  1571                           	callstack 22
  1572                           
  1573                           ;incstack = 0
  1574                           ;to_hex@nibble stored from wreg
  1575  000898  6E28               	movwf	to_hex@nibble^0,c
  1576  00089A                     
  1577                           ;main.c: 319:         char value = buf_pop(INBUF);
  1578  00089A  0E0A               	movlw	10
  1579  00089C  6028               	cpfslt	to_hex@nibble^0,c
  1580  00089E  EF53  F004         	goto	u611
  1581  0008A2  EF55  F004         	goto	u610
  1582  0008A6                     u611:
  1583  0008A6  EF59  F004         	goto	l1532
  1584  0008AA                     u610:
  1585  0008AA                     
  1586                           ;main.c: 320:         buf_push(value, OUTBUF);
  1587  0008AA  5028               	movf	to_hex@nibble^0,w,c
  1588  0008AC  0F30               	addlw	48
  1589  0008AE  EF5B  F004         	goto	l224
  1590  0008B2                     l1532:
  1591                           
  1592                           ;main.c: 322:         send();
  1593  0008B2  5028               	movf	to_hex@nibble^0,w,c
  1594  0008B4  0F37               	addlw	55
  1595  0008B6                     l224:
  1596  0008B6  0012               	return		;funcret
  1597  0008B8                     __end_of_to_hex:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _send *****************
  1601 ;; Defined at:
  1602 ;;		line 346 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		None
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    5
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_send_button_press
  1627 ;;		_parse
  1628 ;;		_send_distance
  1629 ;;		_send_altitude
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text10
  1634  000966                     __ptext10:
  1635                           	callstack 0
  1636  000966                     _send:
  1637                           	callstack 24
  1638  000966                     
  1639                           ;main.c: 347:                         message_type = MT_MANUAL;
  1640  000966  8AAC               	bsf	172,5,c	;volatile
  1641  000968  0012               	return		;funcret
  1642  00096A                     __end_of_send:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _disable_interrupts *****************
  1646 ;; Defined at:
  1647 ;;		line 92 in file "main.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		None
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    5
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_send_button_press
  1672 ;;		_parse
  1673 ;;		_send_distance
  1674 ;;		_send_altitude
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text11
  1679  00096A                     __ptext11:
  1680                           	callstack 0
  1681  00096A                     _disable_interrupts:
  1682                           	callstack 22
  1683  00096A                     
  1684                           ;main.c: 93:     INTCONbits.GIE = 0;;main.c: 93: {
  1685  00096A  9EF2               	bcf	242,7,c	;volatile
  1686  00096C  0012               	return		;funcret
  1687  00096E                     __end_of_disable_interrupts:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _get_end *****************
  1691 ;; Defined at:
  1692 ;;		line 279 in file "main.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;Total ram usage:        0 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    5
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_parse
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text12
  1721  000950                     __ptext12:
  1722                           	callstack 0
  1723  000950                     _get_end:
  1724                           	callstack 24
  1725  000950                     
  1726                           ;main.c: 280:     buf_push(hex, OUTBUF);
  1727  000950  0E00               	movlw	0
  1728  000952  6E0F               	movwf	(_dist+1)^0,c
  1729  000954  0E00               	movlw	0
  1730  000956  6E0E               	movwf	_dist^0,c
  1731  000958  0012               	return		;funcret
  1732  00095A                     __end_of_get_end:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _get_altitude *****************
  1736 ;; Defined at:
  1737 ;;		line 287 in file "main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  period          2   12[COMRAM] unsigned short 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		None
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        2 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    5
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_parse
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text13
  1766  000960                     __ptext13:
  1767                           	callstack 0
  1768  000960                     _get_altitude:
  1769                           	callstack 24
  1770  000960                     
  1771                           ;main.c: 288: 
  1772  000960  C028  F01B         	movff	get_altitude@period,_altitude_period
  1773  000964  0012               	return		;funcret
  1774  000966                     __end_of_get_altitude:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _init_timer *****************
  1778 ;; Defined at:
  1779 ;;		line 235 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    5
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text14
  1808  00091E                     __ptext14:
  1809                           	callstack 0
  1810  00091E                     _init_timer:
  1811                           	callstack 25
  1812  00091E                     
  1813                           ;main.c: 237:     buf_push(hex, OUTBUF);
  1814  00091E  0E03               	movlw	3
  1815  000920  6ED5               	movwf	213,c	;volatile
  1816                           
  1817                           ;main.c: 238:     hex = to_hex(nibble0);
  1818  000922  0E00               	movlw	0
  1819  000924  6ED7               	movwf	215,c	;volatile
  1820                           
  1821                           ;main.c: 239:     buf_push(hex, OUTBUF);
  1822  000926  0E00               	movlw	0
  1823  000928  6ED6               	movwf	214,c	;volatile
  1824  00092A  0012               	return		;funcret
  1825  00092C                     __end_of_init_timer:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _init_serial *****************
  1829 ;; Defined at:
  1830 ;;		line 202 in file "main.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		None
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text15
  1859  0008FC                     __ptext15:
  1860                           	callstack 0
  1861  0008FC                     _init_serial:
  1862                           	callstack 25
  1863  0008FC                     
  1864                           ;main.c: 207: 
  1865  0008FC  98AC               	bcf	172,4,c	;volatile
  1866                           
  1867                           ;main.c: 208: uint16_t from_hex16(char nibble3, char nibble2, char nibble1, char nibble0
      +                          ) {
  1868  0008FE  967E               	bcf	126,3,c	;volatile
  1869                           
  1870                           ;main.c: 209:     return (uint8_t) ((to_nibble(nibble3) << 12) | (to_nibble(nibble2) << 
      +                          8) | (to_nibble(nibble1) << 4) | (to_nibble(nibble0)));
  1871  000900  84AC               	bsf	172,2,c	;volatile
  1872                           
  1873                           ;main.c: 210: }
  1874  000902  68AF               	setf	175,c	;volatile
  1875                           
  1876                           ;main.c: 211: 
  1877  000904  8EAB               	bsf	171,7,c	;volatile
  1878                           
  1879                           ;main.c: 212: void send() {
  1880  000906  889D               	bsf	157,4,c	;volatile
  1881                           
  1882                           ;main.c: 213:     TXSTA1bits.TXEN = 1;
  1883  000908  8A9D               	bsf	157,5,c	;volatile
  1884                           
  1885                           ;main.c: 214: }
  1886  00090A  88AB               	bsf	171,4,c	;volatile
  1887  00090C  0012               	return		;funcret
  1888  00090E                     __end_of_init_serial:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _init_ports *****************
  1892 ;; Defined at:
  1893 ;;		line 181 in file "main.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    5
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text16
  1922  0007DC                     __ptext16:
  1923                           	callstack 0
  1924  0007DC                     _init_ports:
  1925                           	callstack 25
  1926  0007DC                     
  1927                           ;main.c: 182: }
  1928  0007DC  0EFE               	movlw	254
  1929  0007DE  6E92               	movwf	146,c	;volatile
  1930                           
  1931                           ;main.c: 183: 
  1932  0007E0  0EFE               	movlw	254
  1933  0007E2  6E93               	movwf	147,c	;volatile
  1934                           
  1935                           ;main.c: 184: char to_hex(uint8_t nibble) {
  1936  0007E4  0EFE               	movlw	254
  1937  0007E6  6E94               	movwf	148,c	;volatile
  1938                           
  1939                           ;main.c: 185:     if (nibble < 10) {
  1940  0007E8  0EFE               	movlw	254
  1941  0007EA  6E95               	movwf	149,c	;volatile
  1942                           
  1943                           ;main.c: 186:         return nibble + '0';
  1944  0007EC  0E10               	movlw	16
  1945  0007EE  6E99               	movwf	153,c	;volatile
  1946                           
  1947                           ;main.c: 187:     } else {
  1948  0007F0  0E00               	movlw	0
  1949  0007F2  6E80               	movwf	128,c	;volatile
  1950                           
  1951                           ;main.c: 188:         return nibble + 'A' - 10;
  1952  0007F4  0E00               	movlw	0
  1953  0007F6  6E81               	movwf	129,c	;volatile
  1954                           
  1955                           ;main.c: 189:     }
  1956  0007F8  0E00               	movlw	0
  1957  0007FA  6E82               	movwf	130,c	;volatile
  1958                           
  1959                           ;main.c: 190:     return 0xFF;
  1960  0007FC  0E00               	movlw	0
  1961  0007FE  6E83               	movwf	131,c	;volatile
  1962                           
  1963                           ;main.c: 191: }
  1964  000800  0E00               	movlw	0
  1965  000802  6E87               	movwf	135,c	;volatile
  1966                           
  1967                           ;main.c: 192: 
  1968  000804  0E00               	movlw	0
  1969  000806  6E89               	movwf	137,c	;volatile
  1970                           
  1971                           ;main.c: 193: uint8_t to_nibble(char nibble) {
  1972  000808  0E00               	movlw	0
  1973  00080A  6E8A               	movwf	138,c	;volatile
  1974                           
  1975                           ;main.c: 194:     if ('0' <= nibble && nibble <= '9') {
  1976  00080C  0E00               	movlw	0
  1977  00080E  6E8B               	movwf	139,c	;volatile
  1978                           
  1979                           ;main.c: 195:         return nibble - '0';
  1980  000810  0E00               	movlw	0
  1981  000812  6E8C               	movwf	140,c	;volatile
  1982                           
  1983                           ;main.c: 196:     } else if ('A' <= nibble && nibble <= 'F') {
  1984  000814  0E00               	movlw	0
  1985  000816  6E90               	movwf	144,c	;volatile
  1986  000818  0012               	return		;funcret
  1987  00081A                     __end_of_init_ports:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _init_interrupts *****************
  1991 ;; Defined at:
  1992 ;;		line 217 in file "main.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    6
  2013 ;; This function calls:
  2014 ;;		_enable_interrupts
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text17
  2021  00092C                     __ptext17:
  2022                           	callstack 0
  2023  00092C                     _init_interrupts:
  2024                           	callstack 24
  2025  00092C                     
  2026                           ;main.c: 219:     uint8_t nibble1 = distance & 0xF;
  2027  00092C  8CF2               	bsf	242,6,c	;volatile
  2028                           
  2029                           ;main.c: 220:     distance >>= 4;
  2030  00092E  8A9D               	bsf	157,5,c	;volatile
  2031                           
  2032                           ;main.c: 221:     uint8_t nibble2 = distance & 0xF;
  2033  000930  889D               	bsf	157,4,c	;volatile
  2034                           
  2035                           ;main.c: 222:     distance >>= 4;
  2036  000932  8AF2               	bsf	242,5,c	;volatile
  2037  000934                     
  2038                           ;main.c: 223:     uint8_t nibble3 = distance & 0xF;
  2039  000934  ECB7  F004         	call	_enable_interrupts	;wreg free
  2040  000938  0012               	return		;funcret
  2041  00093A                     __end_of_init_interrupts:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _enable_interrupts *****************
  2045 ;; Defined at:
  2046 ;;		line 96 in file "main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		None
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    5
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_init_interrupts
  2071 ;;		_send_button_press
  2072 ;;		_parse
  2073 ;;		_send_distance
  2074 ;;		_send_altitude
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text18
  2079  00096E                     __ptext18:
  2080                           	callstack 0
  2081  00096E                     _enable_interrupts:
  2082                           	callstack 22
  2083  00096E                     
  2084                           ;main.c: 97:     INTCONbits.GIE = 1;;main.c: 97:     ADRESH = 0x00;
  2085  00096E  8EF2               	bsf	242,7,c	;volatile
  2086  000970  0012               	return		;funcret
  2087  000972                     __end_of_enable_interrupts:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _init_adc *****************
  2091 ;; Defined at:
  2092 ;;		line 226 in file "main.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    5
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text19
  2121  0008D2                     __ptext19:
  2122                           	callstack 0
  2123  0008D2                     _init_adc:
  2124                           	callstack 25
  2125  0008D2                     
  2126                           ;main.c: 228:     buf_push('S', OUTBUF);
  2127  0008D2  0E31               	movlw	49
  2128  0008D4  6EC2               	movwf	194,c	;volatile
  2129                           
  2130                           ;main.c: 229:     buf_push('T', OUTBUF);
  2131  0008D6  0E00               	movlw	0
  2132  0008D8  6EC1               	movwf	193,c	;volatile
  2133                           
  2134                           ;main.c: 230: 
  2135  0008DA  0EAA               	movlw	170
  2136  0008DC  6EC0               	movwf	192,c	;volatile
  2137                           
  2138                           ;main.c: 231:     char hex;
  2139  0008DE  0E00               	movlw	0
  2140  0008E0  6EC4               	movwf	196,c	;volatile
  2141                           
  2142                           ;main.c: 232:     hex = to_hex(nibble3);
  2143  0008E2  0E00               	movlw	0
  2144  0008E4  6EC3               	movwf	195,c	;volatile
  2145  0008E6  0012               	return		;funcret
  2146  0008E8                     __end_of_init_adc:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _adc_task *****************
  2150 ;; Defined at:
  2151 ;;		line 547 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    5
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text20
  2180  000874                     __ptext20:
  2181                           	callstack 0
  2182  000874                     _adc_task:
  2183                           	callstack 25
  2184  000874  82C2               	bsf	194,1,c	;volatile
  2185  000876                     l303:
  2186  000876  B2C2               	btfsc	194,1,c	;volatile
  2187  000878  EF40  F004         	goto	u571
  2188  00087C  EF42  F004         	goto	u570
  2189  000880                     u571:
  2190  000880  EF3B  F004         	goto	l303
  2191  000884                     u570:
  2192  000884  50C4               	movf	196,w,c	;volatile
  2193  000886  6E29               	movwf	(??_adc_task+1)^0,c
  2194  000888  6A28               	clrf	??_adc_task^0,c
  2195  00088A  50C3               	movf	195,w,c	;volatile
  2196  00088C  2428               	addwf	??_adc_task^0,w,c
  2197  00088E  6E0C               	movwf	_adc^0,c
  2198  000890  0E00               	movlw	0
  2199  000892  2029               	addwfc	(??_adc_task+1)^0,w,c
  2200  000894  6E0D               	movwf	(_adc+1)^0,c
  2201  000896  0012               	return		;funcret
  2202  000898                     __end_of_adc_task:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _lowPriorityISR *****************
  2206 ;; Defined at:
  2207 ;;		line 177 in file "main.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		None
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;Total ram usage:        1 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    4
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		Interrupt level 1
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	intcodelo
  2236  000018                     __pintcodelo:
  2237                           	callstack 0
  2238  000018                     _lowPriorityISR:
  2239                           	callstack 22
  2240                           
  2241                           ;incstack = 0
  2242  000018  8037               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2243  00001A  CFE0 F027          	movff	bsr,??_lowPriorityISR
  2244  00001E  C027  FFE0         	movff	??_lowPriorityISR,bsr
  2245  000022  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2246  000024  0010               	retfie	
  2247  000026                     __end_of_lowPriorityISR:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _highPriorityISR *****************
  2251 ;; Defined at:
  2252 ;;		line 171 in file "main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        4 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    3
  2273 ;; This function calls:
  2274 ;;		_receive_isr
  2275 ;;		_timer_isr
  2276 ;;		_transmit_isr
  2277 ;; This function is called by:
  2278 ;;		Interrupt level 2
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	intcode
  2283  000008                     __pintcode:
  2284                           	callstack 0
  2285  000008                     _highPriorityISR:
  2286                           	callstack 22
  2287                           
  2288                           ;incstack = 0
  2289  000008  8237               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2290  00000A  ED7C  F003         	call	int_func,f	;refresh shadow registers
  2291                           
  2292                           	psect	intcode_body
  2293  0006F8                     __pintcode_body:
  2294                           	callstack 22
  2295  0006F8                     int_func:
  2296                           	callstack 22
  2297  0006F8  0006               	pop		; remove dummy address from shadow register refresh
  2298  0006FA  CFE1 F023          	movff	fsr1l,??_highPriorityISR
  2299  0006FE  CFE2 F024          	movff	fsr1h,??_highPriorityISR+1
  2300  000702  CFD9 F025          	movff	fsr2l,??_highPriorityISR+2
  2301  000706  CFDA F026          	movff	fsr2h,??_highPriorityISR+3
  2302  00070A                     
  2303                           ;main.c: 172:         case 2:
  2304  00070A  AA9E               	btfss	158,5,c	;volatile
  2305  00070C  EF8A  F003         	goto	i2u114_41
  2306  000710  EF8C  F003         	goto	i2u114_40
  2307  000714                     i2u114_41:
  2308  000714  EF8E  F003         	goto	i2l1820
  2309  000718                     i2u114_40:
  2310  000718  EC74  F004         	call	_receive_isr	;wreg free
  2311  00071C                     i2l1820:
  2312                           
  2313                           ;main.c: 173:             LATCbits.LC0 = 1;
  2314  00071C  A89E               	btfss	158,4,c	;volatile
  2315  00071E  EF93  F003         	goto	i2u115_41
  2316  000722  EF95  F003         	goto	i2u115_40
  2317  000726                     i2u115_41:
  2318  000726  EF97  F003         	goto	i2l1824
  2319  00072A                     i2u115_40:
  2320  00072A  EC26  F004         	call	_transmit_isr	;wreg free
  2321  00072E                     i2l1824:
  2322                           
  2323                           ;main.c: 174:             break;
  2324  00072E  A4F2               	btfss	242,2,c	;volatile
  2325  000730  EF9C  F003         	goto	i2u116_41
  2326  000734  EF9E  F003         	goto	i2u116_40
  2327  000738                     i2u116_41:
  2328  000738  EFA0  F003         	goto	i2l157
  2329  00073C                     i2u116_40:
  2330  00073C  EC9D  F004         	call	_timer_isr	;wreg free
  2331  000740                     i2l157:
  2332  000740  C026  FFDA         	movff	??_highPriorityISR+3,fsr2h
  2333  000744  C025  FFD9         	movff	??_highPriorityISR+2,fsr2l
  2334  000748  C024  FFE2         	movff	??_highPriorityISR+1,fsr1h
  2335  00074C  C023  FFE1         	movff	??_highPriorityISR,fsr1l
  2336  000750  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2337  000752  0011               	retfie		f
  2338  000754                     __end_of_highPriorityISR:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _transmit_isr *****************
  2342 ;; Defined at:
  2343 ;;		line 156 in file "main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    2
  2364 ;; This function calls:
  2365 ;;		_buf_isempty
  2366 ;;		_buf_pop
  2367 ;; This function is called by:
  2368 ;;		_highPriorityISR
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text23
  2373  00084C                     __ptext23:
  2374                           	callstack 0
  2375  00084C                     _transmit_isr:
  2376                           	callstack 22
  2377  00084C                     
  2378                           ;main.c: 157: void get_manual(uint8_t activation) {
  2379  00084C  989E               	bcf	158,4,c	;volatile
  2380  00084E                     
  2381                           ;main.c: 159: }
  2382  00084E  0E01               	movlw	1
  2383  000850  EC0D  F004         	call	_buf_isempty
  2384  000854  0900               	iorlw	0
  2385  000856  B4D8               	btfsc	status,2,c
  2386  000858  EF30  F004         	goto	i2u77_41
  2387  00085C  EF32  F004         	goto	i2u77_40
  2388  000860                     i2u77_41:
  2389  000860  EF35  F004         	goto	i2l1662
  2390  000864                     i2u77_40:
  2391  000864  9AAC               	bcf	172,5,c	;volatile
  2392  000866  EF39  F004         	goto	i2l146
  2393  00086A                     i2l1662:
  2394  00086A  0E01               	movlw	1
  2395  00086C  EC22  F002         	call	_buf_pop
  2396  000870  6EAD               	movwf	173,c	;volatile
  2397  000872                     i2l146:
  2398  000872  0012               	return		;funcret
  2399  000874                     __end_of_transmit_isr:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _buf_pop *****************
  2403 ;; Defined at:
  2404 ;;		line 134 in file "main.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  buf             1    wreg     enum E4963
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  buf             1    6[COMRAM] enum E4963
  2409 ;;  v               1    5[COMRAM] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      unsigned char 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    6
  2426 ;; This function calls:
  2427 ;;		_buf_isempty
  2428 ;; This function is called by:
  2429 ;;		_transmit_isr
  2430 ;;		_parse
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text24
  2435  000444                     __ptext24:
  2436                           	callstack 0
  2437  000444                     _buf_pop:
  2438                           	callstack 17
  2439                           
  2440                           ;incstack = 0
  2441                           ;buf_pop@buf stored from wreg
  2442  000444  6E22               	movwf	buf_pop@buf^0,c
  2443  000446                     
  2444                           ;main.c: 135:     altitude_period = PERIOD_0;;main.c: 136:     is_manual = 0;
  2445  000446  5022               	movf	buf_pop@buf^0,w,c
  2446  000448  EC0D  F004         	call	_buf_isempty
  2447  00044C  0900               	iorlw	0
  2448  00044E  B4D8               	btfsc	status,2,c
  2449  000450  EF2C  F002         	goto	i2u66_41
  2450  000454  EF2E  F002         	goto	i2u66_40
  2451  000458                     i2u66_41:
  2452  000458  EF31  F002         	goto	i2l1584
  2453  00045C                     i2u66_40:
  2454  00045C                     
  2455                           ;main.c: 137:     adc = 0;
  2456  00045C  0EFF               	movlw	255
  2457  00045E  EF7B  F002         	goto	i2l134
  2458  000462                     i2l1584:
  2459                           
  2460                           ;main.c: 139: 
  2461  000462  5022               	movf	buf_pop@buf^0,w,c
  2462  000464  A4D8               	btfss	status,2,c
  2463  000466  EF37  F002         	goto	i2u67_41
  2464  00046A  EF39  F002         	goto	i2u67_40
  2465  00046E                     i2u67_41:
  2466  00046E  EF4C  F002         	goto	i2l1588
  2467  000472                     i2u67_40:
  2468  000472  0E04               	movlw	low _tail
  2469  000474  2422               	addwf	buf_pop@buf^0,w,c
  2470  000476  6ED9               	movwf	fsr2l,c
  2471  000478  6ADA               	clrf	fsr2h,c
  2472  00047A  0E00               	movlw	high _tail
  2473  00047C  22DA               	addwfc	fsr2h,f,c
  2474  00047E  50DF               	movf	indf2,w,c
  2475  000480  6E1F               	movwf	??_buf_pop^0,c
  2476  000482  6A20               	clrf	(??_buf_pop+1)^0,c
  2477  000484  0E00               	movlw	low _inbuf
  2478  000486  241F               	addwf	??_buf_pop^0,w,c
  2479  000488  6ED9               	movwf	fsr2l,c
  2480  00048A  0E01               	movlw	high _inbuf
  2481  00048C  2020               	addwfc	(??_buf_pop+1)^0,w,c
  2482  00048E  6EDA               	movwf	fsr2h,c
  2483  000490  50DF               	movf	indf2,w,c
  2484  000492  6E21               	movwf	buf_pop@v^0,c
  2485  000494  EF5D  F002         	goto	i2l137
  2486  000498                     i2l1588:
  2487  000498  0E04               	movlw	low _tail
  2488  00049A  2422               	addwf	buf_pop@buf^0,w,c
  2489  00049C  6ED9               	movwf	fsr2l,c
  2490  00049E  6ADA               	clrf	fsr2h,c
  2491  0004A0  0E00               	movlw	high _tail
  2492  0004A2  22DA               	addwfc	fsr2h,f,c
  2493  0004A4  50DF               	movf	indf2,w,c
  2494  0004A6  6E1F               	movwf	??_buf_pop^0,c
  2495  0004A8  6A20               	clrf	(??_buf_pop+1)^0,c
  2496  0004AA  0E00               	movlw	low _outbuf
  2497  0004AC  241F               	addwf	??_buf_pop^0,w,c
  2498  0004AE  6ED9               	movwf	fsr2l,c
  2499  0004B0  0E02               	movlw	high _outbuf
  2500  0004B2  2020               	addwfc	(??_buf_pop+1)^0,w,c
  2501  0004B4  6EDA               	movwf	fsr2h,c
  2502  0004B6  50DF               	movf	indf2,w,c
  2503  0004B8  6E21               	movwf	buf_pop@v^0,c
  2504  0004BA                     i2l137:
  2505                           
  2506                           ;main.c: 141:     dist = distance;
  2507  0004BA  0E04               	movlw	low _tail
  2508  0004BC  2422               	addwf	buf_pop@buf^0,w,c
  2509  0004BE  6ED9               	movwf	fsr2l,c
  2510  0004C0  6ADA               	clrf	fsr2h,c
  2511  0004C2  0E00               	movlw	high _tail
  2512  0004C4  22DA               	addwfc	fsr2h,f,c
  2513  0004C6  2ADF               	incf	indf2,f,c
  2514                           
  2515                           ;main.c: 142:     send_button_press(21);
  2516  0004C8  0E04               	movlw	low _tail
  2517  0004CA  2422               	addwf	buf_pop@buf^0,w,c
  2518  0004CC  6ED9               	movwf	fsr2l,c
  2519  0004CE  6ADA               	clrf	fsr2h,c
  2520  0004D0  0E00               	movlw	high _tail
  2521  0004D2  22DA               	addwfc	fsr2h,f,c
  2522  0004D4  28DE               	incf	postinc2,w,c
  2523  0004D6  A4D8               	btfss	status,2,c
  2524  0004D8  EF70  F002         	goto	i2u68_41
  2525  0004DC  EF72  F002         	goto	i2u68_40
  2526  0004E0                     i2u68_41:
  2527  0004E0  EF7A  F002         	goto	i2l1592
  2528  0004E4                     i2u68_40:
  2529  0004E4  0E04               	movlw	low _tail
  2530  0004E6  2422               	addwf	buf_pop@buf^0,w,c
  2531  0004E8  6ED9               	movwf	fsr2l,c
  2532  0004EA  6ADA               	clrf	fsr2h,c
  2533  0004EC  0E00               	movlw	high _tail
  2534  0004EE  22DA               	addwfc	fsr2h,f,c
  2535  0004F0  0E00               	movlw	0
  2536  0004F2  6EDF               	movwf	indf2,c
  2537  0004F4                     i2l1592:
  2538                           
  2539                           ;main.c: 143: }
  2540  0004F4  5021               	movf	buf_pop@v^0,w,c
  2541  0004F6                     i2l134:
  2542  0004F6  0012               	return		;funcret
  2543  0004F8                     __end_of_buf_pop:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _buf_isempty *****************
  2547 ;; Defined at:
  2548 ;;		line 117 in file "main.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  buf             1    wreg     enum E4963
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  buf             1    2[COMRAM] enum E4963
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      unsigned char 
  2555 ;; Registers used:
  2556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    5
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_buf_pop
  2573 ;;		_transmit_isr
  2574 ;;		_parse
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text25
  2579  00081A                     __ptext25:
  2580                           	callstack 0
  2581  00081A                     _buf_isempty:
  2582                           	callstack 17
  2583                           
  2584                           ;incstack = 0
  2585                           ;buf_isempty@buf stored from wreg
  2586  00081A  6E1E               	movwf	buf_isempty@buf^0,c
  2587  00081C                     
  2588                           ;main.c: 118: typedef enum {
  2589  00081C  0E04               	movlw	low _tail
  2590  00081E  241E               	addwf	buf_isempty@buf^0,w,c
  2591  000820  6ED9               	movwf	fsr2l,c
  2592  000822  6ADA               	clrf	fsr2h,c
  2593  000824  0E00               	movlw	high _tail
  2594  000826  22DA               	addwfc	fsr2h,f,c
  2595  000828  0E06               	movlw	low _head
  2596  00082A  241E               	addwf	buf_isempty@buf^0,w,c
  2597  00082C  6EE1               	movwf	fsr1l,c
  2598  00082E  6AE2               	clrf	fsr1h,c
  2599  000830  0E00               	movlw	high _head
  2600  000832  22E2               	addwfc	fsr1h,f,c
  2601  000834  50DE               	movf	postinc2,w,c
  2602  000836  18E6               	xorwf	postinc1,w,c
  2603  000838  B4D8               	btfsc	status,2,c
  2604  00083A  EF21  F004         	goto	i2u62_41
  2605  00083E  EF24  F004         	goto	i2u62_40
  2606  000842                     i2u62_41:
  2607  000842  0E01               	movlw	1
  2608  000844  EF25  F004         	goto	i2u63_40
  2609  000848                     i2u62_40:
  2610  000848  0E00               	movlw	0
  2611  00084A                     i2u63_40:
  2612  00084A  0012               	return		;funcret
  2613  00084C                     __end_of_buf_isempty:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _timer_isr *****************
  2617 ;; Defined at:
  2618 ;;		line 164 in file "main.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_highPriorityISR
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text26
  2646  00093A                     __ptext26:
  2647                           	callstack 0
  2648  00093A                     _timer_isr:
  2649                           	callstack 24
  2650  00093A                     
  2651                           ;main.c: 166:             LATCbits.LC0 = 0;
  2652  00093A  94F2               	bcf	242,2,c	;volatile
  2653  00093C                     
  2654                           ;main.c: 167:             LATDbits.LD0 = 0;
  2655  00093C  0E00               	movlw	0
  2656  00093E  6ED7               	movwf	215,c	;volatile
  2657                           
  2658                           ;main.c: 168:             break;
  2659  000940  0E00               	movlw	0
  2660  000942  6ED6               	movwf	214,c	;volatile
  2661  000944  0012               	return		;funcret
  2662  000946                     __end_of_timer_isr:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _receive_isr *****************
  2666 ;; Defined at:
  2667 ;;		line 148 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		_buf_push
  2690 ;; This function is called by:
  2691 ;;		_highPriorityISR
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text27
  2696  0008E8                     __ptext27:
  2697                           	callstack 0
  2698  0008E8                     _receive_isr:
  2699                           	callstack 23
  2700  0008E8                     
  2701                           ;main.c: 149: void get_speed(uint16_t spd) {
  2702  0008E8  92AB               	bcf	171,1,c	;volatile
  2703                           
  2704                           ;main.c: 150:     speed = spd;
  2705  0008EA  94AB               	bcf	171,2,c	;volatile
  2706                           
  2707                           ;main.c: 151: }
  2708  0008EC  88AB               	bsf	171,4,c	;volatile
  2709  0008EE                     
  2710                           ;main.c: 152: 
  2711  0008EE  0E00               	movlw	0
  2712  0008F0  6E1C               	movwf	buf_push@buf^0,c
  2713  0008F2  50AE               	movf	174,w,c	;volatile
  2714  0008F4  EC7C  F002         	call	_buf_push
  2715  0008F8                     
  2716                           ;main.c: 153: void get_altitude(uint16_t period) {
  2717  0008F8  9A9E               	bcf	158,5,c	;volatile
  2718  0008FA  0012               	return		;funcret
  2719  0008FC                     __end_of_receive_isr:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _buf_push *****************
  2723 ;; Defined at:
  2724 ;;		line 123 in file "main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  v               1    wreg     unsigned char 
  2727 ;;  buf             1    0[COMRAM] enum E4963
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  v               1    3[COMRAM] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    5
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_receive_isr
  2750 ;;		_send_button_press
  2751 ;;		_parse
  2752 ;;		_send_distance
  2753 ;;		_send_altitude
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text28
  2758  0004F8                     __ptext28:
  2759                           	callstack 0
  2760  0004F8                     _buf_push:
  2761                           	callstack 18
  2762                           
  2763                           ;incstack = 0
  2764                           ;buf_push@v stored from wreg
  2765  0004F8  6E1F               	movwf	buf_push@v^0,c
  2766  0004FA                     
  2767                           ;main.c: 124: 
  2768  0004FA  501C               	movf	buf_push@buf^0,w,c
  2769  0004FC  A4D8               	btfss	status,2,c
  2770  0004FE  EF83  F002         	goto	i2u64_41
  2771  000502  EF85  F002         	goto	i2u64_40
  2772  000506                     i2u64_41:
  2773  000506  EF98  F002         	goto	i2l1570
  2774  00050A                     i2u64_40:
  2775  00050A  0E06               	movlw	low _head
  2776  00050C  241C               	addwf	buf_push@buf^0,w,c
  2777  00050E  6ED9               	movwf	fsr2l,c
  2778  000510  6ADA               	clrf	fsr2h,c
  2779  000512  0E00               	movlw	high _head
  2780  000514  22DA               	addwfc	fsr2h,f,c
  2781  000516  50DF               	movf	indf2,w,c
  2782  000518  6E1D               	movwf	??_buf_push^0,c
  2783  00051A  6A1E               	clrf	(??_buf_push+1)^0,c
  2784  00051C  0E00               	movlw	low _inbuf
  2785  00051E  241D               	addwf	??_buf_push^0,w,c
  2786  000520  6ED9               	movwf	fsr2l,c
  2787  000522  0E01               	movlw	high _inbuf
  2788  000524  201E               	addwfc	(??_buf_push+1)^0,w,c
  2789  000526  6EDA               	movwf	fsr2h,c
  2790  000528  C01F  FFDF         	movff	buf_push@v,indf2
  2791  00052C  EFA9  F002         	goto	i2l127
  2792  000530                     i2l1570:
  2793  000530  0E06               	movlw	low _head
  2794  000532  241C               	addwf	buf_push@buf^0,w,c
  2795  000534  6ED9               	movwf	fsr2l,c
  2796  000536  6ADA               	clrf	fsr2h,c
  2797  000538  0E00               	movlw	high _head
  2798  00053A  22DA               	addwfc	fsr2h,f,c
  2799  00053C  50DF               	movf	indf2,w,c
  2800  00053E  6E1D               	movwf	??_buf_push^0,c
  2801  000540  6A1E               	clrf	(??_buf_push+1)^0,c
  2802  000542  0E00               	movlw	low _outbuf
  2803  000544  241D               	addwf	??_buf_push^0,w,c
  2804  000546  6ED9               	movwf	fsr2l,c
  2805  000548  0E02               	movlw	high _outbuf
  2806  00054A  201E               	addwfc	(??_buf_push+1)^0,w,c
  2807  00054C  6EDA               	movwf	fsr2h,c
  2808  00054E  C01F  FFDF         	movff	buf_push@v,indf2
  2809  000552                     i2l127:
  2810                           
  2811                           ;main.c: 126: uint8_t pkt_id = 0;
  2812  000552  0E06               	movlw	low _head
  2813  000554  241C               	addwf	buf_push@buf^0,w,c
  2814  000556  6ED9               	movwf	fsr2l,c
  2815  000558  6ADA               	clrf	fsr2h,c
  2816  00055A  0E00               	movlw	high _head
  2817  00055C  22DA               	addwfc	fsr2h,f,c
  2818  00055E  2ADF               	incf	indf2,f,c
  2819                           
  2820                           ;main.c: 127: 
  2821  000560  0E06               	movlw	low _head
  2822  000562  241C               	addwf	buf_push@buf^0,w,c
  2823  000564  6ED9               	movwf	fsr2l,c
  2824  000566  6ADA               	clrf	fsr2h,c
  2825  000568  0E00               	movlw	high _head
  2826  00056A  22DA               	addwfc	fsr2h,f,c
  2827  00056C  28DE               	incf	postinc2,w,c
  2828  00056E  A4D8               	btfss	status,2,c
  2829  000570  EFBC  F002         	goto	i2u65_41
  2830  000574  EFBE  F002         	goto	i2u65_40
  2831  000578                     i2u65_41:
  2832  000578  EFC6  F002         	goto	i2l130
  2833  00057C                     i2u65_40:
  2834  00057C  0E06               	movlw	low _head
  2835  00057E  241C               	addwf	buf_push@buf^0,w,c
  2836  000580  6ED9               	movwf	fsr2l,c
  2837  000582  6ADA               	clrf	fsr2h,c
  2838  000584  0E00               	movlw	high _head
  2839  000586  22DA               	addwfc	fsr2h,f,c
  2840  000588  0E00               	movlw	0
  2841  00058A  6EDF               	movwf	indf2,c
  2842  00058C                     i2l130:
  2843  00058C  0012               	return		;funcret
  2844  00058E                     __end_of_buf_push:
  2845                           	callstack 0
  2846  0000                     
  2847                           	psect	rparam
  2848  0000                     
  2849                           	psect	temp
  2850  000037                     btemp:
  2851                           	callstack 0
  2852  000037                     	ds	1
  2853  0000                     int$flags	set	btemp
  2854  0000                     wtemp8	set	btemp+1
  2855  0000                     ttemp5	set	btemp+1
  2856  0000                     ttemp6	set	btemp+4
  2857  0000                     ttemp7	set	btemp+8
  2858                           
  2859                           	psect	config
  2860                           
  2861                           ; Padding undefined space
  2862  300000                     	org	3145728
  2863  300000  FF                 	db	255
  2864                           
  2865                           ;Config register CONFIG1H @ 0x300001
  2866                           ;	Oscillator Selection bits
  2867                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2868                           ;	Fail-Safe Clock Monitor Enable bit
  2869                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2870                           ;	Internal/External Oscillator Switchover bit
  2871                           ;	IESO = OFF, Two-Speed Start-up disabled
  2872  300001                     	org	3145729
  2873  300001  06                 	db	6
  2874                           
  2875                           ;Config register CONFIG2L @ 0x300002
  2876                           ;	Power-up Timer Enable bit
  2877                           ;	PWRT = OFF, PWRT disabled
  2878                           ;	Brown-out Reset Enable bits
  2879                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2880                           ;	Brown-out Voltage bits
  2881                           ;	BORV = 3, Minimum setting
  2882  300002                     	org	3145730
  2883  300002  19                 	db	25
  2884                           
  2885                           ;Config register CONFIG2H @ 0x300003
  2886                           ;	Watchdog Timer
  2887                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2888                           ;	Watchdog Timer Postscale Select bits
  2889                           ;	WDTPS = 32768, 1:32768
  2890  300003                     	org	3145731
  2891  300003  1E                 	db	30
  2892                           
  2893                           ;Config register CONFIG3L @ 0x300004
  2894                           ;	Processor Data Memory Mode Select bits
  2895                           ;	MODE = MC, Microcontroller mode
  2896                           ;	Address Bus Width Select bits
  2897                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  2898                           ;	Data Bus Width Select bit
  2899                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  2900                           ;	External Bus Data Wait Enable bit
  2901                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  2902  300004                     	org	3145732
  2903  300004  F3                 	db	243
  2904                           
  2905                           ;Config register CONFIG3H @ 0x300005
  2906                           ;	CCP2 MUX bit
  2907                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  2908                           ;	ECCP MUX bit
  2909                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  2910                           ;	Low-Power Timer1 Oscillator Enable bit
  2911                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2912                           ;	MCLR Pin Enable bit
  2913                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2914  300005                     	org	3145733
  2915  300005  83                 	db	131
  2916                           
  2917                           ;Config register CONFIG4L @ 0x300006
  2918                           ;	Stack Full/Underflow Reset Enable bit
  2919                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2920                           ;	Single-Supply ICSP Enable bit
  2921                           ;	LVP = OFF, Single-Supply ICSP disabled
  2922                           ;	Boot Block Size Select bits
  2923                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  2924                           ;	Extended Instruction Set Enable bit
  2925                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2926                           ;	Background Debugger Enable bit
  2927                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  2928  300006                     	org	3145734
  2929  300006  01                 	db	1
  2930                           
  2931                           ; Padding undefined space
  2932  300007                     	org	3145735
  2933  300007  FF                 	db	255
  2934                           
  2935                           ;Config register CONFIG5L @ 0x300008
  2936                           ;	Code Protection bit Block 0
  2937                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  2938                           ;	Code Protection bit Block 1
  2939                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2940                           ;	Code Protection bit Block 2
  2941                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2942                           ;	Code Protection bit Block 3
  2943                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2944                           ;	Code Protection bit Block 4
  2945                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  2946                           ;	Code Protection bit Block 5
  2947                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  2948                           ;	Code Protection bit Block 6
  2949                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  2950                           ;	Code Protection bit Block 7
  2951                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  2952  300008                     	org	3145736
  2953  300008  FF                 	db	255
  2954                           
  2955                           ;Config register CONFIG5H @ 0x300009
  2956                           ;	Boot Block Code Protection bit
  2957                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  2958                           ;	Data EEPROM Code Protection bit
  2959                           ;	CPD = OFF, Data EEPROM not code-protected
  2960  300009                     	org	3145737
  2961  300009  C0                 	db	192
  2962                           
  2963                           ;Config register CONFIG6L @ 0x30000A
  2964                           ;	Write Protection bit Block 0
  2965                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  2966                           ;	Write Protection bit Block 1
  2967                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2968                           ;	Write Protection bit Block 2
  2969                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2970                           ;	Write Protection bit Block 3
  2971                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2972                           ;	Write Protection bit Block 4
  2973                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  2974                           ;	Write Protection bit Block 5
  2975                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  2976                           ;	Write Protection bit Block 6
  2977                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  2978                           ;	Write Protection bit Block 7
  2979                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  2980  30000A                     	org	3145738
  2981  30000A  FF                 	db	255
  2982                           
  2983                           ;Config register CONFIG6H @ 0x30000B
  2984                           ;	Configuration Register Write Protection bit
  2985                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2986                           ;	Boot Block Write Protection bit
  2987                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  2988                           ;	Data EEPROM Write Protection bit
  2989                           ;	WRTD = OFF, Data EEPROM not write-protected
  2990  30000B                     	org	3145739
  2991  30000B  E0                 	db	224
  2992                           
  2993                           ;Config register CONFIG7L @ 0x30000C
  2994                           ;	Table Read Protection bit Block 0
  2995                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  2996                           ;	Table Read Protection bit Block 1
  2997                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2998                           ;	Table Read Protection bit Block 2
  2999                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3000                           ;	Table Read Protection bit Block 3
  3001                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3002                           ;	Table Read Protection bit Block 4
  3003                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  3004                           ;	Table Read Protection bit Block 5
  3005                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  3006                           ;	Table Read Protection bit Block 6
  3007                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  3008                           ;	Table Read Protection bit Block 7
  3009                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  3010  30000C                     	org	3145740
  3011  30000C  FF                 	db	255
  3012                           
  3013                           ;Config register CONFIG7H @ 0x30000D
  3014                           ;	Boot Block Table Read Protection bit
  3015                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  3016  30000D                     	org	3145741
  3017  30000D  40                 	db	64
  3018                           tosu	equ	0xFFF
  3019                           tosh	equ	0xFFE
  3020                           tosl	equ	0xFFD
  3021                           stkptr	equ	0xFFC
  3022                           pclatu	equ	0xFFB
  3023                           pclath	equ	0xFFA
  3024                           pcl	equ	0xFF9
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           prodh	equ	0xFF4
  3030                           prodl	equ	0xFF3
  3031                           indf0	equ	0xFEF
  3032                           postinc0	equ	0xFEE
  3033                           postdec0	equ	0xFED
  3034                           preinc0	equ	0xFEC
  3035                           plusw0	equ	0xFEB
  3036                           fsr0h	equ	0xFEA
  3037                           fsr0l	equ	0xFE9
  3038                           wreg	equ	0xFE8
  3039                           indf1	equ	0xFE7
  3040                           postinc1	equ	0xFE6
  3041                           postdec1	equ	0xFE5
  3042                           preinc1	equ	0xFE4
  3043                           plusw1	equ	0xFE3
  3044                           fsr1h	equ	0xFE2
  3045                           fsr1l	equ	0xFE1
  3046                           bsr	equ	0xFE0
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           postdec2	equ	0xFDD
  3050                           preinc2	equ	0xFDC
  3051                           plusw2	equ	0xFDB
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         665
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      54
    BANK0           160      0     128
    BANK1           256      0     255
    BANK2           256      0     255
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_parse
    _parse->_get_go
    _get_go->_send_button_press
    _send_button_press->_to_hex

Critical Paths under _lowPriorityISR in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowPriorityISR in BANK0

    None.

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowPriorityISR in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowPriorityISR in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowPriorityISR in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowPriorityISR in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowPriorityISR in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowPriorityISR in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowPriorityISR in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowPriorityISR in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowPriorityISR in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowPriorityISR in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowPriorityISR in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowPriorityISR in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowPriorityISR in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowPriorityISR in BANK14

    None.

Critical Paths under _highPriorityISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowPriorityISR in BANK15

    None.

Critical Paths under _highPriorityISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6340
                                             25 COMRAM     2     2      0
                           _adc_task
                           _init_adc
                    _init_interrupts
                         _init_ports
                        _init_serial
                         _init_timer
                              _parse
                       _start_system
 ---------------------------------------------------------------------------------
 (1) _start_system                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _parse                                                6     6      0    6340
                                             19 COMRAM     6     6      0
                        _buf_isempty
                            _buf_pop
                           _buf_push
                 _disable_interrupts
                  _enable_interrupts
                       _get_altitude
                            _get_end
                             _get_go
                            _get_led
                         _get_manual
                          _get_speed
                               _send
                          _to_nibble
 ---------------------------------------------------------------------------------
 (2) _to_nibble                                            1     1      0     198
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_speed                                            2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _get_manual                                           1     1      0      22
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_led                                              3     3      0      22
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _get_go                                               2     0      2    2801
                                             17 COMRAM     2     0      2
                  _send_button_press
 ---------------------------------------------------------------------------------
 (3) _send_button_press                                    4     4      0    2703
                                             13 COMRAM     4     4      0
                           _buf_push
                 _disable_interrupts
                  _enable_interrupts
                               _send
                             _to_hex
 ---------------------------------------------------------------------------------
 (4) _to_hex                                               1     1      0      66
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _send                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _disable_interrupts                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _buf_push                                             4     3      1    2500
 ---------------------------------------------------------------------------------
 (2) _get_end                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_altitude                                         2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _buf_pop                                              4     4      0     222
                        _buf_isempty
 ---------------------------------------------------------------------------------
 (9) _buf_isempty                                          3     3      0      44
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
                  _enable_interrupts
 ---------------------------------------------------------------------------------
 (4) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_task                                             2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lowPriorityISR                                       1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _highPriorityISR                                      4     4      0    2766
                                              7 COMRAM     4     4      0
                        _receive_isr
                          _timer_isr
                       _transmit_isr
 ---------------------------------------------------------------------------------
 (7) _transmit_isr                                         0     0      0     266
                        _buf_isempty
                            _buf_pop
 ---------------------------------------------------------------------------------
 (8) _buf_pop                                              4     4      0     222
                        _buf_isempty
 ---------------------------------------------------------------------------------
 (9) _buf_isempty                                          3     3      0      44
 ---------------------------------------------------------------------------------
 (7) _timer_isr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _receive_isr                                          0     0      0    2500
                           _buf_push
 ---------------------------------------------------------------------------------
 (8) _buf_push                                             4     3      1    2500
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_task
   _init_adc
   _init_interrupts
     _enable_interrupts
   _init_ports
   _init_serial
   _init_timer
   _parse
     _buf_isempty
     _buf_pop
       _buf_isempty
     _buf_push
     _disable_interrupts
     _enable_interrupts
     _get_altitude
     _get_end
     _get_go
       _send_button_press
         _buf_push
         _disable_interrupts
         _enable_interrupts
         _send
         _to_hex
     _get_led
     _get_manual
     _get_speed
     _send
     _to_nibble
   _start_system

 _lowPriorityISR (ROOT)

 _highPriorityISR (ROOT)
   _receive_isr
     _buf_push
   _timer_isr
   _transmit_isr
     _buf_isempty
     _buf_pop
       _buf_isempty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      36       1       57.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B4      32        0.0%
DATA                 0      0     2B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue May 28 16:02:52 2024

      __size_of_start_system 0006                           bsr 000FE0                          l112 0970  
                        l201 0958                          l210 08D0                          l220 06F6  
                        l204 094E                          l300 0442                          l109 096C  
                        l214 0690                          l303 0876                          l207 0964  
                        l224 08B6                          l216 069C                          l217 06A2  
                        l306 0896                          l242 0968                          l218 06A8  
                        l171 0938                          l219 06AE                          l260 060E  
                        l180 095E                          l165 0818                          l229 0688  
                        l174 08E6                          l168 090C                          l177 092A  
                        l285 029A                          l198 091C            ??_init_interrupts 0028  
                        u610 08AA                          u611 08A6                          u700 08CE  
                        u710 0622                          u711 061E                          u720 0632  
                        u800 00A0                          u721 062E                          u801 009C  
                        u570 0884                          u730 064A                          u810 00B2  
                        u571 0880                          u731 0646                          u811 00AE  
                        u740 065A                          u900 0178                          u820 00C4  
                        u741 0656                          u901 0174                          u821 00C0  
                        u750 0672                          u910 018A                          u830 00E2  
                        u751 066E                          u911 0186                          u831 00DE  
                        u760 0682                          u920 01A8                          u840 00F4  
                        u761 067E                          u921 01A4                          u841 00F0  
                        u690 08CC                          u930 01BA                          u850 0106  
                        u691 08C6                          u931 01B6                          u851 0102  
                        u940 01CC                          u860 0124                          u780 0062  
                        u941 01C8                          u861 0120                          u781 005E  
                        u950 01EA                          u870 0136                          u790 008E  
                        u951 01E6                          u871 0132                          u791 008A  
                        u960 01FC                          u880 0148                          u961 01F8  
                        u881 0144                          u970 020E                          u890 0166  
                        u971 020A                          u891 0162                          u980 0246  
                        u981 0242                          u990 0256                          u991 0252  
                        _adc 000C                          wreg 000FE8                   _TXSTA1bits 000FAC  
                buf_push@buf 001C               get_go@distance 002D                         l1200 08FC  
                       l1210 095A                         l1206 08D2                         l1208 091E  
                       l1600 0950                         l1520 096A                         l1522 096E  
                       l1602 0946                         l1604 0960                         l1540 0966  
                       l1532 08B2                         l1524 089A                         l1612 06B4  
                       l1620 0622                         l1700 00F4                         l1390 0884  
                       l1198 07DC                         l1526 08AA                         l1550 05A6  
                       l1606 08BA                         l1630 064A                         l1622 0632  
                       l1710 0148                         l1702 0106                         l1560 05E0  
                       l1552 05B0                         l1608 068C                         l1640 0672  
                       l1632 065A                         l1720 0196                         l1712 0154  
                       l1704 0112                         l1800 03F6                         l1562 0606  
                       l1554 05BA                         l1546 0590                         l1618 0612  
                       l1730 01EA                         l1722 01A8                         l1714 0166  
                       l1706 0124                         l1388 0874                         l1564 060A  
                       l1556 05C4                         l1548 05A2                         l1628 063A  
                       l1740 0232                         l1732 01FC                         l1724 01BA  
                       l1716 0178                         l1708 0136                         l1804 0428  
                       l1558 05D6                         l1646 0686                         l1638 0662  
                       l1806 043E                         l1750 0276                         l1742 0236  
                       l1734 020E                         l1726 01CC                         l1718 018A  
                       l1670 0032                         l1910 079E                         l1664 092C  
                       l1760 02D8                         l1752 0286                         l1744 0246  
                       l1736 021A                         l1728 01D8                         l1680 0062  
                       l1672 003A                         l1920 07BA                         l1912 07A2  
                       l1666 0934                         l1770 0312                         l1754 0296  
                       l1746 0256                         l1738 0222                         l1690 00A0  
                       l1682 006A                         l1674 0044                         l1922 07BE  
                       l1914 07A6                         l1596 090E                         l1940 06C8  
                       l1780 034C                         l1772 0324                         l1764 02EC  
                       l1756 02B0                         l1748 0266                         l1692 00B2  
                       l1684 007A                         l1676 0048                         l1668 002A  
                       l1916 07B2                         l1598 0916                         l1790 038E  
                       l1782 035C                         l1774 0330                         l1766 02FC  
                       l1758 02C8                         l1694 00C4                         l1686 007C  
                       l1678 0050                         l1918 07B6                         l1936 03AC  
                       l1784 0364                         l1776 0336                         l1696 00D0  
                       l1688 008E                         l1938 040A                         l1786 0374  
                       l1794 0398                         l1698 00E2                         l1788 0384  
                       l1796 03E2                         u1000 0266                         u1001 0262  
                       u1010 0276                         u1011 0272                         u1100 02FC  
                       u1020 0286                         u1101 02F8                         u1021 0282  
                       u1110 030E                         u1030 0296                         u1111 030A  
                       u1031 0292                         u1120 0348                         u1040 02AC  
                       u1121 0344                         u1041 02A6                         u1130 043E  
                       u1050 02AE                         u1131 043A                         u1060 02C4  
                       u1061 02BE                         u1070 02C6                         u1080 02D8  
                       u1081 02D4                         u1090 02E8                         u1091 02E4  
                       _LATA 000F89                         _LATB 000F8A                         _LATC 000F8B  
                       _LATD 000F8C                         u1177 07C8                         _LATH 000F90  
             ??_get_altitude 002A                 _transmit_isr 084C                         _head 0006  
                       _dist 000E                         _main 079E                         _tail 0004  
                       _send 0966                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 0037                         start 0026                 _start_system 095A  
               ___param_bank 000000                 _BAUDCON1bits 000F7E                        ?_main 001C  
                      ?_send 001C                        _T0CON 000FD5                        i1l162 001E  
                      i2l130 058C                        i2l123 084A                        i2l141 08FA  
                      i2l134 04F6                        i2l127 0552                        i2l137 04BA  
                      i2l146 0872                        i2l149 0944                        i2l157 0740  
                      _TMR0H 000FD7                        _TMR0L 000FD6                        _PORTA 000F80  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTH 000F87                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISH 000F99  
               get_speed@spd 0028                 ?_init_serial 001C              __end_of_get_end 095A  
            __end_of_get_led 06F8              __end_of_buf_pop 04F8              to_nibble@nibble 0028  
                      _inbuf 0100                        _parse 002A           _disable_interrupts 096A  
                      _speed 000A     _digit_count_to_be_parsed 0016                parse@is_digit 0033  
                      ttemp5 0038                        ttemp6 003B                        ttemp7 003F  
                      status 000FD8                        wtemp8 0038          ?_disable_interrupts 001C  
               ?_receive_isr 001C               _lowPriorityISR 0018              __initialization 0754  
          _send_button_press 058E                 __end_of_main 07DC                 __end_of_send 096A  
         ?_send_button_press 001C               buf_isempty@buf 001E                       ??_main 0035  
                     ??_send 0028                __activetblptr 000003         ??_disable_interrupts 0028  
        ??_send_button_press 0029                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     ?_parse 001C     __size_of_highPriorityISR 074C             __end_of_adc_task 0898  
                     i2l1194 093A                       i2l1196 093C                       i2l1542 081C  
                     i2l1570 0530                       i2l1650 08E8                       i2l1572 057C  
                     i2l1652 08EE                       i2l1660 0864                       i2l1820 071C  
                     i2l1566 04FA                       i2l1654 08F8                       i2l1590 04E4  
                     i2l1662 086A                       i2l1822 072A                       i2l1568 050A  
                     i2l1592 04F4                       i2l1584 0462                       i2l1576 0446  
                     i2l1656 084C                       i2l1824 072E                       i2l1816 070A  
                     i2l1586 0472                       i2l1578 045C                       i2l1658 084E  
                     i2l1826 073C                       i2l1818 0718                       i2l1588 0498  
                     _RCREG1 000FAE                       _SPBRG1 000FAF                       _TXREG1 000FAD  
     __end_of_lowPriorityISR 0026    __end_of_send_button_press 0610         __size_of_buf_isempty 0032  
           __end_of_buf_push 058E                       _get_go 090E             __end_of_init_adc 08E8  
                     clear_0 075C                       clear_1 0770                       clear_2 0782  
                     clear_3 078E         __end_of_get_altitude 0966                       _pkt_id 0011  
                     _to_hex 0898                       _outbuf 0200                    ??_get_end 0028  
                  ??_get_led 0028                    ??_buf_pop 001F                   __accesstop 0060  
    __end_of__initialization 0794              ?_lowPriorityISR 001C                ___rparam_used 000001  
            _init_interrupts 092C               __pcstackCOMRAM 001C                __end_of_parse 0444  
                parse@is_end 0031           __size_of_get_speed 000A         __size_of_init_serial 0012  
                    ??_parse 002F                   __pbssBANK0 0060                   __pbssBANK1 0100  
                 __pbssBANK2 0200   __size_of_send_button_press 0082            ??_highPriorityISR 0023  
       __size_of_receive_isr 0014                      ?_get_go 002D                      ?_to_hex 001C  
                  ?_adc_task 001C           __size_of_to_nibble 007A           __size_of_timer_isr 000C  
                 _get_manual 08B8                      i2u62_40 0848                      i2u62_41 0842  
                    i2u63_40 084A                      i2u64_40 050A                      i2u64_41 0506  
                    i2u65_40 057C                      i2u65_41 0578                      i2u66_40 045C  
                    i2u66_41 0458                      i2u67_40 0472                      i2u67_41 046E  
                    i2u68_40 04E4                      i2u68_41 04E0                      i2u77_40 0864  
                    i2u77_41 0860                    ?_buf_push 001C      __end_of_init_interrupts 093A  
                  ?_init_adc 001C           get_altitude@period 0028                      __Hparam 0000  
                    __Lparam 0000        __size_of_get_altitude 0006            __end_of_get_speed 0950  
            __size_of_get_go 0010                      __pcinit 0754                   _init_timer 091E  
                 _init_ports 07DC                      __ramtop 1000                      __ptext0 079E  
                    __ptext1 095A                      __ptext2 002A                      __ptext3 0610  
                    __ptext4 0946                      __ptext5 08B8                      __ptext6 068A  
                    __ptext7 090E                      __ptext8 058E                      __ptext9 0898  
                 ??_adc_task 0028              __size_of_to_hex 0020                      _get_end 0950  
                    _get_led 068A                      _buf_pop 0444                    _T0CONbits 000FD5  
                 ??_buf_push 001D               __pintcode_body 06F8         end_of_initialization 0794  
               _get_altitude 0960                   ??_init_adc 0028                      int_func 06F8  
          __end_of_to_nibble 068A            __end_of_timer_isr 0946                    _RCSTAbits 000FAB  
         _parsed_digit_count 0015                      postdec1 000FE5                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                _parsed_number 0008  
__size_of_disable_interrupts 0004                  ?_get_manual 001C                   get_led@led 002A  
           ??_lowPriorityISR 0027                   buf_pop@buf 0022             ?_init_interrupts 001C  
   send_button_press@nibble0 0029     send_button_press@nibble1 002A                ??_buf_isempty 001C  
                ?_init_timer 001C                  ?_init_ports 001C               __end_of_get_go 091E  
       get_manual@activation 0028            _enable_interrupts 096E               __end_of_to_hex 08B8  
         ?_enable_interrupts 001C          start_initialization 0754              _altitude_period 001B  
            _highPriorityISR 0008          ??_enable_interrupts 0028                ?_transmit_isr 001C  
              ?_start_system 001C          __size_of_get_manual 001A          __end_of_buf_isempty 084C  
                   ??_get_go 002F    __end_of_enable_interrupts 0972                     ??_to_hex 0028  
              ??_init_serial 0028            __size_of_adc_task 0024                  __pbssCOMRAM 0001  
                 parse@value 0034               ??_transmit_isr 0023            __size_of_buf_push 0096  
        __size_of_init_timer 000E          __size_of_init_ports 003E               ??_start_system 0028  
              ??_receive_isr 0020            __size_of_init_adc 0016                    __pintcode 0008  
                __pintcodelo 0018                    _get_speed 0946                     ?_get_end 001C  
                   ?_get_led 001C                     ?_buf_pop 001C      __end_of_highPriorityISR 0754  
                  _parse$973 0032                    _is_manual 001A               __size_of_parse 041A  
               _message_name 0001          __end_of_init_serial 090E                 _message_type 0018  
       send_button_press@hex 002C                     _LATAbits 000F89                     _LATBbits 000F8A  
                   _LATCbits 000F8B                     _LATDbits 000F8C                     _PIE1bits 000F9D  
                _buf_isempty 081A                     i2u114_40 0718                     i2u114_41 0714  
                   i2u115_40 072A                     i2u115_41 0726                     i2u116_40 073C  
                   i2u116_41 0738                     _PIR1bits 000F9E                    _pkt_valid 0012  
                  _pkt_state 0014                    _to_nibble 0610          __end_of_receive_isr 08FC  
                  _timer_isr 093A   __size_of_enable_interrupts 0004                   ?_get_speed 0028  
                 _ADCON0bits 000FC2                    buf_push@v 001F      send_button_press@button 002B  
                  _output_st 0010                 ??_get_manual 0028                     __Hrparam 0000  
                   __Lrparam 0000           __end_of_get_manual 08D2                   ?_to_nibble 001C  
                 ?_timer_isr 001C         __end_of_transmit_isr 0874                 ??_init_timer 0028  
               ??_init_ports 0028   __end_of_disable_interrupts 096E                     _adc_task 0874  
           __size_of_get_end 000A             __size_of_get_led 006E             ?_highPriorityISR 001C  
           __size_of_buf_pop 00B4         __end_of_start_system 0960                  _init_serial 08FC  
                   __ptext10 0966                     __ptext11 096A                     __ptext20 0874  
                   __ptext12 0950                     __ptext13 0960                     __ptext14 091E  
                   __ptext23 084C                     __ptext15 08FC                     __ptext24 0444  
                   __ptext16 07DC                     __ptext25 081A                     __ptext17 092C  
                   __ptext26 093A                     __ptext18 096E                     __ptext27 08E8  
                   __ptext19 08D2                     __ptext28 04F8                     _buf_push 04F8  
                   _init_adc 08D2                __size_of_main 003E                __size_of_send 0004  
                _message_pos 0017           __end_of_init_timer 092C           __end_of_init_ports 081A  
               _pkt_bodysize 0013                  _receive_isr 08E8                     _pkt_body 0060  
   __size_of_init_interrupts 000E                     int$flags 0037                  _parse_state 0019  
                   buf_pop@v 0021                  ??_get_speed 002A                   _INTCONbits 000FF2  
                   intlevel1 0000                     intlevel2 0000                   _RCSTA1bits 000FAB  
    __size_of_lowPriorityISR 000E                  ??_to_nibble 0028                  ??_timer_isr 001C  
               to_hex@nibble 0028                ?_get_altitude 0028                 ?_buf_isempty 001C  
      __size_of_transmit_isr 0028  
